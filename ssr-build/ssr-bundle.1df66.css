/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/**
 * $sm: 576px;
 * $md: 768px;
 * $lg: 992px;
 * $xl: 1200px;
 **/

 .Grid            { display: -ms-flexbox; display: flex; -ms-flex-wrap: wrap; flex-wrap: wrap; }
 .Grid.\-top      { -ms-flex-align: start; align-items: flex-start; }
 .Grid.\-middle   { -ms-flex-align: center; align-items: center; }
 .Grid.\-bottom   { -ms-flex-align: end; align-items: flex-end; }
 .Grid.\-stretch  { -ms-flex-align: stretch; align-items: stretch; }
 .Grid.\-baseline { -ms-flex-align: baseline; align-items: baseline; }
 .Grid.\-left     { -ms-flex-pack: start; justify-content: flex-start; }
 .Grid.\-center   { -ms-flex-pack: center; justify-content: center; }
 .Grid.\-right    { -ms-flex-pack: end; justify-content: flex-end; }
 .Grid.\-between  { -ms-flex-pack: justify; justify-content: space-between; }
 .Grid.\-around   { -ms-flex-pack: distribute; justify-content: space-around; }
 
 .Cell            { box-sizing: border-box; -ms-flex-negative: 0; flex-shrink: 0; }
 .Cell.\-fill     { width: 0; min-width: 0; -ms-flex-positive: 1; flex-grow: 1; }
 .Cell.\-1of12    { width: calc(100% * 1 / 12); }
 .Cell.\-2of12    { width: calc(100% * 2 / 12); }
 .Cell.\-3of12    { width: calc(100% * 3 / 12); }
 .Cell.\-4of12    { width: calc(100% * 4 / 12); }
 .Cell.\-5of12    { width: calc(100% * 5 / 12); }
 .Cell.\-6of12    { width: calc(100% * 6 / 12); }
 .Cell.\-7of12    { width: calc(100% * 7 / 12); }
 .Cell.\-8of12    { width: calc(100% * 8 / 12); }
 .Cell.\-9of12    { width: calc(100% * 9 / 12); }
 .Cell.\-10of12   { width: calc(100% * 10 / 12); }
 .Cell.\-11of12   { width: calc(100% * 11 / 12); }
 .Cell.\-12of12   { width: 100%; }
 
 .Cell            { box-sizing: border-box; }
 
 @media (min-width: 576px) {
   .Cell.\-sm-fill     { width: 0; min-width: 0; -ms-flex-positive: 1; flex-grow: 1; }
   .Cell.\-sm-1of12    { width: calc(100% * 1 / 12); }
   .Cell.\-sm-2of12    { width: calc(100% * 2 / 12); }
   .Cell.\-sm-3of12    { width: calc(100% * 3 / 12); }
   .Cell.\-sm-4of12    { width: calc(100% * 4 / 12); }
   .Cell.\-sm-5of12    { width: calc(100% * 5 / 12); }
   .Cell.\-sm-6of12    { width: calc(100% * 6 / 12); }
   .Cell.\-sm-7of12    { width: calc(100% * 7 / 12); }
   .Cell.\-sm-8of12    { width: calc(100% * 8 / 12); }
   .Cell.\-sm-9of12    { width: calc(100% * 9 / 12); }
   .Cell.\-sm-10of12   { width: calc(100% * 10 / 12); }
   .Cell.\-sm-11of12   { width: calc(100% * 11 / 12); }
   .Cell.\-sm-12of12   { width: 100%; }
 }
 
 @media (min-width: 768px) {
   .Cell.\-md-fill     { width: 0; min-width: 0; -ms-flex-positive: 1; flex-grow: 1; }
   .Cell.\-md-1of12    { width: calc(100% * 1 / 12); }
   .Cell.\-md-2of12    { width: calc(100% * 2 / 12); }
   .Cell.\-md-3of12    { width: calc(100% * 3 / 12); }
   .Cell.\-md-4of12    { width: calc(100% * 4 / 12); }
   .Cell.\-md-5of12    { width: calc(100% * 5 / 12); }
   .Cell.\-md-6of12    { width: calc(100% * 6 / 12); }
   .Cell.\-md-7of12    { width: calc(100% * 7 / 12); }
   .Cell.\-md-8of12    { width: calc(100% * 8 / 12); }
   .Cell.\-md-9of12    { width: calc(100% * 9 / 12); }
   .Cell.\-md-10of12   { width: calc(100% * 10 / 12); }
   .Cell.\-md-11of12   { width: calc(100% * 11 / 12); }
   .Cell.\-md-12of12   { width: 100%; }
 }
 
 @media (min-width: 992px) {
   .Cell.\-lg-fill     { width: 0; min-width: 0; -ms-flex-positive: 1; flex-grow: 1; }
   .Cell.\-lg-1of12    { width: calc(100% * 1 / 12); }
   .Cell.\-lg-2of12    { width: calc(100% * 2 / 12); }
   .Cell.\-lg-3of12    { width: calc(100% * 3 / 12); }
   .Cell.\-lg-4of12    { width: calc(100% * 4 / 12); }
   .Cell.\-lg-5of12    { width: calc(100% * 5 / 12); }
   .Cell.\-lg-6of12    { width: calc(100% * 6 / 12); }
   .Cell.\-lg-7of12    { width: calc(100% * 7 / 12); }
   .Cell.\-lg-8of12    { width: calc(100% * 8 / 12); }
   .Cell.\-lg-9of12    { width: calc(100% * 9 / 12); }
   .Cell.\-lg-10of12   { width: calc(100% * 10 / 12); }
   .Cell.\-lg-11of12   { width: calc(100% * 11 / 12); }
   .Cell.\-lg-12of12   { width: 100%; }
 }
 
 @media (min-width: 1200px) {
   .Cell.\-xl-fill     { width: 0; min-width: 0; -ms-flex-positive: 1; flex-grow: 1; }
   .Cell.\-xl-1of12    { width: calc(100% * 1 / 12); }
   .Cell.\-xl-2of12    { width: calc(100% * 2 / 12); }
   .Cell.\-xl-3of12    { width: calc(100% * 3 / 12); }
   .Cell.\-xl-4of12    { width: calc(100% * 4 / 12); }
   .Cell.\-xl-5of12    { width: calc(100% * 5 / 12); }
   .Cell.\-xl-6of12    { width: calc(100% * 6 / 12); }
   .Cell.\-xl-7of12    { width: calc(100% * 7 / 12); }
   .Cell.\-xl-8of12    { width: calc(100% * 8 / 12); }
   .Cell.\-xl-9of12    { width: calc(100% * 9 / 12); }
   .Cell.\-xl-10of12   { width: calc(100% * 10 / 12); }
   .Cell.\-xl-11of12   { width: calc(100% * 11 / 12); }
   .Cell.\-xl-12of12   { width: 100%; }
 }
 
/*
  augmented-ui
  BSD 2-Clause License
  Copyright (c) James0x57, PropJockey, 2019
*/
[augmented-ui~="exe-init"],
[augmented-ui~="exe"],
[augmented-ui~="exe-lite"],
[augmented-ui~="before"],
[augmented-ui~="after"] {
  --aug-tl: 0px;
  --aug-tl-width: initial;
  --aug-tl-height: initial;
  --aug-_TlWidth: initial;
  --aug-_TlHeight: initial;
  --aug-_TlJoinBX: initial;
  --aug-_TlJoinBY: initial;
  --aug-_TlJoinRX: initial;
  --aug-_TlJoinRY: initial;
  --aug-_TlPath: initial;
  --aug-_TlInset1JoinBX: initial;
  --aug-_TlInset1JoinBY: initial;
  --aug-_TlInset1JoinRX: initial;
  --aug-_TlInset1JoinRY: initial;
  --aug-_TlPathInset1: initial;
  --aug-_TlInset2JoinBX: initial;
  --aug-_TlInset2JoinBY: initial;
  --aug-_TlInset2JoinRX: initial;
  --aug-_TlInset2JoinRY: initial;
  --aug-_TlPathInset2: initial;
  --aug-tr: 0px;
  --aug-tr-width: initial;
  --aug-tr-height: initial;
  --aug-_TrWidth: initial;
  --aug-_TrHeight: initial;
  --aug-_TrJoinLX: initial;
  --aug-_TrJoinLY: initial;
  --aug-_TrJoinBX: initial;
  --aug-_TrJoinBY: initial;
  --aug-_TrPath: initial;
  --aug-_TrInset1JoinLX: initial;
  --aug-_TrInset1JoinLY: initial;
  --aug-_TrInset1JoinBX: initial;
  --aug-_TrInset1JoinBY: initial;
  --aug-_TrPathInset1: initial;
  --aug-_TrInset2JoinLX: initial;
  --aug-_TrInset2JoinLY: initial;
  --aug-_TrInset2JoinBX: initial;
  --aug-_TrInset2JoinBY: initial;
  --aug-_TrPathInset2: initial;
  --aug-br: 0px;
  --aug-br-width: initial;
  --aug-br-height: initial;
  --aug-_BrWidth: initial;
  --aug-_BrHeight: initial;
  --aug-_BrJoinTX: initial;
  --aug-_BrJoinTY: initial;
  --aug-_BrJoinLX: initial;
  --aug-_BrJoinLY: initial;
  --aug-_BrPath: initial;
  --aug-_BrInset1JoinTX: initial;
  --aug-_BrInset1JoinTY: initial;
  --aug-_BrInset1JoinLX: initial;
  --aug-_BrInset1JoinLY: initial;
  --aug-_BrPathInset1: initial;
  --aug-_BrInset2JoinTX: initial;
  --aug-_BrInset2JoinTY: initial;
  --aug-_BrInset2JoinLX: initial;
  --aug-_BrInset2JoinLY: initial;
  --aug-_BrPathInset2: initial;
  --aug-bl: 0px;
  --aug-bl-width: initial;
  --aug-bl-height: initial;
  --aug-_BlWidth: initial;
  --aug-_BlHeight: initial;
  --aug-_BlJoinRX: initial;
  --aug-_BlJoinRY: initial;
  --aug-_BlJoinTX: initial;
  --aug-_BlJoinTY: initial;
  --aug-_BlPath: initial;
  --aug-_BlInset1JoinRX: initial;
  --aug-_BlInset1JoinRY: initial;
  --aug-_BlInset1JoinTX: initial;
  --aug-_BlInset1JoinTY: initial;
  --aug-_BlPathInset1: initial;
  --aug-_BlInset2JoinRX: initial;
  --aug-_BlInset2JoinRY: initial;
  --aug-_BlInset2JoinTX: initial;
  --aug-_BlInset2JoinTY: initial;
  --aug-_BlPathInset2: initial;
  --aug-t: 0px;
  --aug-t-width: initial;
  --aug-t-height: initial;
  --aug-t-origin-x: initial;
  --aug-t-offset: initial;
  --aug-_TWidth: initial;
  --aug-_THeight: initial;
  --aug-_TPath: initial;
  --aug-_TPathInset1: initial;
  --aug-_TPathInset2: initial;
  --aug-r: 0px;
  --aug-r-width: initial;
  --aug-r-height: initial;
  --aug-r-origin-y: initial;
  --aug-r-offset: initial;
  --aug-_RWidth: initial;
  --aug-_RHeight: initial;
  --aug-_RPath: initial;
  --aug-_RPathInset1: initial;
  --aug-_RPathInset2: initial;
  --aug-b: 0px;
  --aug-b-width: initial;
  --aug-b-height: initial;
  --aug-b-origin-x: initial;
  --aug-b-offset: initial;
  --aug-_BWidth: initial;
  --aug-_BHeight: initial;
  --aug-_BPath: initial;
  --aug-_BPathInset1: initial;
  --aug-_BPathInset2: initial;
  --aug-l: 0px;
  --aug-l-width: initial;
  --aug-l-height: initial;
  --aug-l-origin-y: initial;
  --aug-l-offset: initial;
  --aug-_LWidth: initial;
  --aug-_LHeight: initial;
  --aug-_LPath: initial;
  --aug-_LPathInset1: initial;
  --aug-_LPathInset2: initial;
}

[augmented-ui~="tl-clip"],
[augmented-ui~="tl-clip"] > [augmented-ui~="tl-inherit"] {
  --aug-tl: 15px; /* clip size */
  --aug-_TlWidth: var(--aug-tl-width, var(--aug-tl));
  --aug-_TlHeight: var(--aug-tl-height, var(--aug-tl));
  --aug-_TlJoinBX: 0px;
  --aug-_TlJoinBY: var(--aug-_TlHeight);
  --aug-_TlJoinRX: var(--aug-_TlWidth);
  --aug-_TlJoinRY: 0px;
  --aug-_TlPath: var(--aug-_TlJoinBX) var(--aug-_TlJoinBY), var(--aug-_TlJoinRX) var(--aug-_TlJoinRY);

  --aug-_TlInset1JoinBX: var(--aug-_W);
  --aug-_TlInset1JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_W) / 2);
  --aug-_TlInset1JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_W) / 2);
  --aug-_TlInset1JoinRY: var(--aug-_W);
  --aug-_TlPathInset1: var(--aug-_TlInset1JoinBX) var(--aug-_TlInset1JoinBY), var(--aug-_TlInset1JoinRX) var(--aug-_TlInset1JoinRY);

  --aug-_TlInset2JoinBX: var(--aug-_WD);
  --aug-_TlInset2JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_WD) / 2);
  --aug-_TlInset2JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_WD) / 2);
  --aug-_TlInset2JoinRY: var(--aug-_WD);
  --aug-_TlPathInset2: var(--aug-_TlInset2JoinBX) var(--aug-_TlInset2JoinBY), var(--aug-_TlInset2JoinRX) var(--aug-_TlInset2JoinRY);
}
[augmented-ui~="tr-clip"],
[augmented-ui~="tr-clip"] > [augmented-ui~="tr-inherit"] {
  --aug-tr: 15px; /* clip size */
  --aug-_TrWidth: var(--aug-tr-width, var(--aug-tr));
  --aug-_TrHeight: var(--aug-tr-height, var(--aug-tr));
  --aug-_TrJoinLX: calc(100% - var(--aug-_TrWidth));
  --aug-_TrJoinLY: 0px;
  --aug-_TrJoinBX: 100%;
  --aug-_TrJoinBY: var(--aug-_TrHeight);
  --aug-_TrPath: var(--aug-_TrJoinLX) var(--aug-_TrJoinLY), var(--aug-_TrJoinBX) var(--aug-_TrJoinBY);

  --aug-_TrInset1JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_W) / 2));
  --aug-_TrInset1JoinLY: var(--aug-_W);
  --aug-_TrInset1JoinBX: calc(100% - var(--aug-_W));
  --aug-_TrInset1JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_W) / 2);
  --aug-_TrPathInset1: var(--aug-_TrInset1JoinLX) var(--aug-_TrInset1JoinLY), var(--aug-_TrInset1JoinBX) var(--aug-_TrInset1JoinBY);

  --aug-_TrInset2JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_WD) / 2));
  --aug-_TrInset2JoinLY: var(--aug-_WD);
  --aug-_TrInset2JoinBX: calc(100% - var(--aug-_WD));
  --aug-_TrInset2JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_WD) / 2);
  --aug-_TrPathInset2: var(--aug-_TrInset2JoinLX) var(--aug-_TrInset2JoinLY), var(--aug-_TrInset2JoinBX) var(--aug-_TrInset2JoinBY);
}
[augmented-ui~="br-clip"],
[augmented-ui~="br-clip"] > [augmented-ui~="br-inherit"] {
  --aug-br: 15px; /* clip size */
  --aug-_BrWidth: var(--aug-br-width, var(--aug-br));
  --aug-_BrHeight: var(--aug-br-height, var(--aug-br));
  --aug-_BrJoinTX: 100%;
  --aug-_BrJoinTY: calc(100% - var(--aug-_BrHeight));
  --aug-_BrJoinLX: calc(100% - var(--aug-_BrWidth));
  --aug-_BrJoinLY: 100%;
  --aug-_BrPath: var(--aug-_BrJoinTX) var(--aug-_BrJoinTY), var(--aug-_BrJoinLX) var(--aug-_BrJoinLY);

  --aug-_BrInset1JoinTX: calc(100% - var(--aug-_W));
  --aug-_BrInset1JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_W) / 2));
  --aug-_BrInset1JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_W) / 2));
  --aug-_BrInset1JoinLY: calc(100% - var(--aug-_W));
  --aug-_BrPathInset1: var(--aug-_BrInset1JoinTX) var(--aug-_BrInset1JoinTY), var(--aug-_BrInset1JoinLX) var(--aug-_BrInset1JoinLY);

  --aug-_BrInset2JoinTX: calc(100% - var(--aug-_WD));
  --aug-_BrInset2JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD) / 2));
  --aug-_BrInset2JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_WD) / 2));
  --aug-_BrInset2JoinLY: calc(100% - var(--aug-_WD));
  --aug-_BrPathInset2: var(--aug-_BrInset2JoinTX) var(--aug-_BrInset2JoinTY), var(--aug-_BrInset2JoinLX) var(--aug-_BrInset2JoinLY);
}
[augmented-ui~="bl-clip"],
[augmented-ui~="bl-clip"] > [augmented-ui~="bl-inherit"] {
  --aug-bl: 15px; /* clip size */
  --aug-_BlWidth: var(--aug-bl-width, var(--aug-bl));
  --aug-_BlHeight: var(--aug-bl-height, var(--aug-bl));
  --aug-_BlJoinRX: var(--aug-_BlWidth);
  --aug-_BlJoinRY: 100%;
  --aug-_BlJoinTX: 0px;
  --aug-_BlJoinTY: calc(100% - var(--aug-_BlHeight));
  --aug-_BlPath: var(--aug-_BlJoinRX) var(--aug-_BlJoinRY), var(--aug-_BlJoinTX) var(--aug-_BlJoinTY);

  --aug-_BlInset1JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_W) / 2);
  --aug-_BlInset1JoinRY: calc(100% - var(--aug-_W));
  --aug-_BlInset1JoinTX: var(--aug-_W);
  --aug-_BlInset1JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_W) / 2));
  --aug-_BlPathInset1: var(--aug-_BlInset1JoinRX) var(--aug-_BlInset1JoinRY), var(--aug-_BlInset1JoinTX) var(--aug-_BlInset1JoinTY);

  --aug-_BlInset2JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_WD) / 2);
  --aug-_BlInset2JoinRY: calc(100% - var(--aug-_WD));
  --aug-_BlInset2JoinTX: var(--aug-_WD);
  --aug-_BlInset2JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD) / 2));
  --aug-_BlPathInset2: var(--aug-_BlInset2JoinRX) var(--aug-_BlInset2JoinRY), var(--aug-_BlInset2JoinTX) var(--aug-_BlInset2JoinTY);
}
[augmented-ui~="t-clip"],
[augmented-ui~="t-clip"] > [augmented-ui~="t-inherit"] {
  --aug-t: 15px; /* clip depth */
  --aug-_TWidth: var(--aug-t-width, calc(var(--aug-t) * 2));
  --aug-_THeight: var(--aug-t-height, var(--aug-t));
  --aug-_TOriginX: calc(var(--aug-t-origin-x, calc(var(--aug-_TlJoinRX, 0px) / 2 + var(--aug-_TrJoinLX, 100%) / 2)) + var(--aug-t-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_TPath: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2) 0px,
                  var(--aug-_TOriginX) var(--aug-_THeight),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2) 0px;

  --aug-_TPathInset1: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W) / 2) var(--aug-_W),
                      var(--aug-_TOriginX) calc(var(--aug-_THeight) + var(--aug-_W) * 1.5),
                      calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W) / 2) var(--aug-_W);

  --aug-_TPathInset2: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD) / 2) var(--aug-_WD),
                      var(--aug-_TOriginX) calc(var(--aug-_THeight) + var(--aug-_WD) * 1.5),
                      calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD) / 2) var(--aug-_WD);
}
[augmented-ui~="r-clip"],
[augmented-ui~="r-clip"] > [augmented-ui~="r-inherit"] {
  --aug-r: 15px; /* clip depth */
  --aug-_RWidth: var(--aug-r-width, var(--aug-r));
  --aug-_RHeight: var(--aug-r-height, calc(var(--aug-r) * 2));
  --aug-_ROriginY: calc(var(--aug-r-origin-y, calc(var(--aug-_TrJoinBY, 0px) / 2 + var(--aug-_BrJoinTY, 100%) / 2)) + var(--aug-r-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_RPath: , 100% calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2),
                  calc(100% - var(--aug-_RWidth)) var(--aug-_ROriginY),
                  100% calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2);

  --aug-_RPathInset1: , calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W) / 2),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W) * 1.5)) var(--aug-_ROriginY),
                        calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W) / 2);

  --aug-_RPathInset2: , calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD) / 2),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD) * 1.5)) var(--aug-_ROriginY),
                        calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD) / 2);
}
[augmented-ui~="b-clip"],
[augmented-ui~="b-clip"] > [augmented-ui~="b-inherit"] {
  --aug-b: 15px; /* clip depth */
  --aug-_BWidth: var(--aug-b-width, calc(var(--aug-b) * 2));
  --aug-_BHeight: var(--aug-b-height, var(--aug-b));
  --aug-_BOriginX: calc(var(--aug-b-origin-x, calc(var(--aug-_BlJoinRX, 0px) / 2 + var(--aug-_BrJoinLX, 100%) / 2)) + var(--aug-b-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_BPath: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2) 100%,
                  var(--aug-_BOriginX) calc(100% - var(--aug-_BHeight)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2) 100%;

  --aug-_BPathInset1: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W) / 2) calc(100% - var(--aug-_W)),
                      var(--aug-_BOriginX) calc(100% - (var(--aug-_BHeight) + var(--aug-_W) * 1.5)),
                      calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W) / 2) calc(100% - var(--aug-_W));

  --aug-_BPathInset2: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD) / 2) calc(100% - var(--aug-_WD)),
                      var(--aug-_BOriginX) calc(100% - (var(--aug-_BHeight) + var(--aug-_WD) * 1.5)),
                      calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD) / 2) calc(100% - var(--aug-_WD));
}
[augmented-ui~="l-clip"],
[augmented-ui~="l-clip"] > [augmented-ui~="l-inherit"] {
  --aug-l: 15px; /* clip depth */
  --aug-_LWidth: var(--aug-l-width, var(--aug-l));
  --aug-_LHeight: var(--aug-l-height, calc(var(--aug-l) * 2));
  --aug-_LOriginY: calc(var(--aug-l-origin-y, calc(var(--aug-_TlJoinBY, 0px) / 2 + var(--aug-_BlJoinTY, 100%) / 2)) + var(--aug-l-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_LPath: , 0px calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2),
                  var(--aug-_LWidth) var(--aug-_LOriginY),
                  0px calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2);

  --aug-_LPathInset1: , var(--aug-_W) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W) / 2),
                        calc(var(--aug-_LWidth) + var(--aug-_W) * 1.5) var(--aug-_LOriginY),
                        var(--aug-_W) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W) / 2);

  --aug-_LPathInset2: , var(--aug-_WD) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD) / 2),
                        calc(var(--aug-_LWidth) + var(--aug-_WD) * 1.5) var(--aug-_LOriginY),
                        var(--aug-_WD) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD) / 2);
}

[augmented-ui~="tl-round"],
[augmented-ui~="tl-round"] > [augmented-ui~="tl-inherit"] {
  --aug-tl: 15px; /* radius */
  --aug-_Sin18cos72: 0.30901699437;
  --aug-_Sin36cos54: 0.58778525229;
  --aug-_Sin54cos36: 0.80901699437;
  --aug-_Sin72cos18: 0.95105651629;
  --aug-_TlJoinBX: 0px;
  --aug-_TlJoinBY: var(--aug-tl);
  --aug-_TlJoinRX: var(--aug-tl);
  --aug-_TlJoinRY: 0px;
  --aug-_TlPath: var(--aug-_TlJoinBX) var(--aug-_TlJoinBY),
            calc(var(--aug-tl) - var(--aug-_Sin72cos18) * var(--aug-tl)) calc(var(--aug-tl) - var(--aug-_Sin18cos72) * var(--aug-tl)),
            calc(var(--aug-tl) - var(--aug-_Sin54cos36) * var(--aug-tl)) calc(var(--aug-tl) - var(--aug-_Sin36cos54) * var(--aug-tl)),
            calc(var(--aug-tl) - var(--aug-_Sin36cos54) * var(--aug-tl)) calc(var(--aug-tl) - var(--aug-_Sin54cos36) * var(--aug-tl)),
            calc(var(--aug-tl) - var(--aug-_Sin18cos72) * var(--aug-tl)) calc(var(--aug-tl) - var(--aug-_Sin72cos18) * var(--aug-tl)),
            var(--aug-_TlJoinRX) var(--aug-_TlJoinRY);

  --aug-_TlInset1JoinBX: var(--aug-_W);
  --aug-_TlInset1JoinBY: var(--aug-tl);
  --aug-_TlInset1JoinRX: var(--aug-tl);
  --aug-_TlInset1JoinRY: var(--aug-_W);
  --aug-_TlPathInset1: var(--aug-_TlInset1JoinBX) var(--aug-_TlInset1JoinBY),
                calc(var(--aug-tl) - var(--aug-_Sin72cos18) * (var(--aug-tl) - var(--aug-_W))) calc(var(--aug-tl) - var(--aug-_Sin18cos72) * (var(--aug-tl) - var(--aug-_W))),
                calc(var(--aug-tl) - var(--aug-_Sin54cos36) * (var(--aug-tl) - var(--aug-_W))) calc(var(--aug-tl) - var(--aug-_Sin36cos54) * (var(--aug-tl) - var(--aug-_W))),
                calc(var(--aug-tl) - var(--aug-_Sin36cos54) * (var(--aug-tl) - var(--aug-_W))) calc(var(--aug-tl) - var(--aug-_Sin54cos36) * (var(--aug-tl) - var(--aug-_W))),
                calc(var(--aug-tl) - var(--aug-_Sin18cos72) * (var(--aug-tl) - var(--aug-_W))) calc(var(--aug-tl) - var(--aug-_Sin72cos18) * (var(--aug-tl) - var(--aug-_W))),
                var(--aug-_TlInset1JoinRX) var(--aug-_TlInset1JoinRY);

  --aug-_TlInset2JoinBX: var(--aug-_WD);
  --aug-_TlInset2JoinBY: calc(var(--aug-tl) + var(--aug-_WD));
  --aug-_TlInset2JoinRX: calc(var(--aug-tl) + var(--aug-_WD));
  --aug-_TlInset2JoinRY: var(--aug-_WD);
  --aug-_TlPathInset2: var(--aug-_TlInset2JoinBX) var(--aug-_TlInset2JoinBY),
                    calc(var(--aug-tl) - var(--aug-_Sin72cos18) * (var(--aug-tl) - var(--aug-_WD))) calc(var(--aug-tl) - var(--aug-_Sin18cos72) * (var(--aug-tl) - var(--aug-_WD))),
                    calc(var(--aug-tl) - var(--aug-_Sin54cos36) * (var(--aug-tl) - var(--aug-_WD))) calc(var(--aug-tl) - var(--aug-_Sin36cos54) * (var(--aug-tl) - var(--aug-_WD))),
                    calc(var(--aug-tl) - var(--aug-_Sin36cos54) * (var(--aug-tl) - var(--aug-_WD))) calc(var(--aug-tl) - var(--aug-_Sin54cos36) * (var(--aug-tl) - var(--aug-_WD))),
                    calc(var(--aug-tl) - var(--aug-_Sin18cos72) * (var(--aug-tl) - var(--aug-_WD))) calc(var(--aug-tl) - var(--aug-_Sin72cos18) * (var(--aug-tl) - var(--aug-_WD))),
                    var(--aug-_TlInset2JoinRX) var(--aug-_TlInset2JoinRY);
}
[augmented-ui~="tr-round"],
[augmented-ui~="tr-round"] > [augmented-ui~="tr-inherit"] {
  --aug-tr: 15px; /* radius */
  --aug-_Sin18cos72: 0.30901699437;
  --aug-_Sin36cos54: 0.58778525229;
  --aug-_Sin54cos36: 0.80901699437;
  --aug-_Sin72cos18: 0.95105651629;
  --aug-_TrJoinLX: calc(100% - var(--aug-tr));
  --aug-_TrJoinLY: 0px;
  --aug-_TrJoinBX: 100%;
  --aug-_TrJoinBY: var(--aug-tr);
  --aug-_TrPath: var(--aug-_TrJoinLX) var(--aug-_TrJoinLY),
            calc(100% - var(--aug-tr) + var(--aug-_Sin18cos72) * var(--aug-tr)) calc(var(--aug-tr) - var(--aug-_Sin72cos18) * var(--aug-tr)),
            calc(100% - var(--aug-tr) + var(--aug-_Sin36cos54) * var(--aug-tr)) calc(var(--aug-tr) - var(--aug-_Sin54cos36) * var(--aug-tr)),
            calc(100% - var(--aug-tr) + var(--aug-_Sin54cos36) * var(--aug-tr)) calc(var(--aug-tr) - var(--aug-_Sin36cos54) * var(--aug-tr)),
            calc(100% - var(--aug-tr) + var(--aug-_Sin72cos18) * var(--aug-tr)) calc(var(--aug-tr) - var(--aug-_Sin18cos72) * var(--aug-tr)),
            var(--aug-_TrJoinBX) var(--aug-_TrJoinBY);

  --aug-_TrInset1JoinLX: calc(100% - var(--aug-tr));
  --aug-_TrInset1JoinLY: var(--aug-_W);
  --aug-_TrInset1JoinBX: calc(100% - var(--aug-_W));
  --aug-_TrInset1JoinBY: var(--aug-tr);
  --aug-_TrPathInset1: var(--aug-_TrInset1JoinLX) var(--aug-_TrInset1JoinLY),
                calc(100% - var(--aug-tr) + var(--aug-_Sin18cos72) * (var(--aug-tr) - var(--aug-_W))) calc(var(--aug-tr) - var(--aug-_Sin72cos18) * (var(--aug-tr) - var(--aug-_W))),
                calc(100% - var(--aug-tr) + var(--aug-_Sin36cos54) * (var(--aug-tr) - var(--aug-_W))) calc(var(--aug-tr) - var(--aug-_Sin54cos36) * (var(--aug-tr) - var(--aug-_W))),
                calc(100% - var(--aug-tr) + var(--aug-_Sin54cos36) * (var(--aug-tr) - var(--aug-_W))) calc(var(--aug-tr) - var(--aug-_Sin36cos54) * (var(--aug-tr) - var(--aug-_W))),
                calc(100% - var(--aug-tr) + var(--aug-_Sin72cos18) * (var(--aug-tr) - var(--aug-_W))) calc(var(--aug-tr) - var(--aug-_Sin18cos72) * (var(--aug-tr) - var(--aug-_W))),
                var(--aug-_TrInset1JoinBX) var(--aug-_TrInset1JoinBY);

  --aug-_TrInset2JoinLX: calc(100% - (var(--aug-tr) + var(--aug-_WD)));
  --aug-_TrInset2JoinLY: var(--aug-_WD);
  --aug-_TrInset2JoinBX: calc(100% - var(--aug-_WD));
  --aug-_TrInset2JoinBY: calc(var(--aug-tr) + var(--aug-_WD));
  --aug-_TrPathInset2: var(--aug-_TrInset2JoinLX) var(--aug-_TrInset2JoinLY),
                    calc(100% - var(--aug-tr) + var(--aug-_Sin18cos72) * (var(--aug-tr) - var(--aug-_WD))) calc(var(--aug-tr) - var(--aug-_Sin72cos18) * (var(--aug-tr) - var(--aug-_WD))),
                    calc(100% - var(--aug-tr) + var(--aug-_Sin36cos54) * (var(--aug-tr) - var(--aug-_WD))) calc(var(--aug-tr) - var(--aug-_Sin54cos36) * (var(--aug-tr) - var(--aug-_WD))),
                    calc(100% - var(--aug-tr) + var(--aug-_Sin54cos36) * (var(--aug-tr) - var(--aug-_WD))) calc(var(--aug-tr) - var(--aug-_Sin36cos54) * (var(--aug-tr) - var(--aug-_WD))),
                    calc(100% - var(--aug-tr) + var(--aug-_Sin72cos18) * (var(--aug-tr) - var(--aug-_WD))) calc(var(--aug-tr) - var(--aug-_Sin18cos72) * (var(--aug-tr) - var(--aug-_WD))),
                    var(--aug-_TrInset2JoinBX) var(--aug-_TrInset2JoinBY);
}
[augmented-ui~="br-round"],
[augmented-ui~="br-round"] > [augmented-ui~="br-inherit"] {
  --aug-br: 15px; /* radius */
  --aug-_Sin18cos72: 0.30901699437;
  --aug-_Sin36cos54: 0.58778525229;
  --aug-_Sin54cos36: 0.80901699437;
  --aug-_Sin72cos18: 0.95105651629;
  --aug-_BrJoinTX: 100%;
  --aug-_BrJoinTY: calc(100% - var(--aug-br));
  --aug-_BrJoinLX: calc(100% - var(--aug-br));
  --aug-_BrJoinLY: 100%;
  --aug-_BrPath: var(--aug-_BrJoinTX) var(--aug-_BrJoinTY),
            calc(100% - var(--aug-br) + var(--aug-_Sin72cos18) * var(--aug-br)) calc(100% - var(--aug-br) + var(--aug-_Sin18cos72) * var(--aug-br)),
            calc(100% - var(--aug-br) + var(--aug-_Sin54cos36) * var(--aug-br)) calc(100% - var(--aug-br) + var(--aug-_Sin36cos54) * var(--aug-br)),
            calc(100% - var(--aug-br) + var(--aug-_Sin36cos54) * var(--aug-br)) calc(100% - var(--aug-br) + var(--aug-_Sin54cos36) * var(--aug-br)),
            calc(100% - var(--aug-br) + var(--aug-_Sin18cos72) * var(--aug-br)) calc(100% - var(--aug-br) + var(--aug-_Sin72cos18) * var(--aug-br)),
            var(--aug-_BrJoinLX) var(--aug-_BrJoinLY);

  --aug-_BrInset1JoinTX: calc(100% - var(--aug-_W));
  --aug-_BrInset1JoinTY: calc(100% - (var(--aug-br) + var(--aug-_W)));
  --aug-_BrInset1JoinLX: calc(100% - (var(--aug-br) + var(--aug-_W)));
  --aug-_BrInset1JoinLY: calc(100% - var(--aug-_W));
  --aug-_BrPathInset1: var(--aug-_BrInset1JoinTX) var(--aug-_BrInset1JoinTY),
                calc(100% - var(--aug-br) + var(--aug-_Sin72cos18) * (var(--aug-br) - var(--aug-_W))) calc(100% - var(--aug-br) + var(--aug-_Sin18cos72) * (var(--aug-br) - var(--aug-_W))),
                calc(100% - var(--aug-br) + var(--aug-_Sin54cos36) * (var(--aug-br) - var(--aug-_W))) calc(100% - var(--aug-br) + var(--aug-_Sin36cos54) * (var(--aug-br) - var(--aug-_W))),
                calc(100% - var(--aug-br) + var(--aug-_Sin36cos54) * (var(--aug-br) - var(--aug-_W))) calc(100% - var(--aug-br) + var(--aug-_Sin54cos36) * (var(--aug-br) - var(--aug-_W))),
                calc(100% - var(--aug-br) + var(--aug-_Sin18cos72) * (var(--aug-br) - var(--aug-_W))) calc(100% - var(--aug-br) + var(--aug-_Sin72cos18) * (var(--aug-br) - var(--aug-_W))),
                var(--aug-_BrInset1JoinLX) var(--aug-_BrInset1JoinLY);

  --aug-_BrInset2JoinTX: calc(100% - var(--aug-_WD));
  --aug-_BrInset2JoinTY: calc(100% - (var(--aug-br) + var(--aug-_WD)));
  --aug-_BrInset2JoinLX: calc(100% - (var(--aug-br) + var(--aug-_WD)));
  --aug-_BrInset2JoinLY: calc(100% - var(--aug-_WD));
  --aug-_BrPathInset2: var(--aug-_BrInset2JoinTX) var(--aug-_BrInset2JoinTY),
                    calc(100% - var(--aug-br) + var(--aug-_Sin72cos18) * (var(--aug-br) - var(--aug-_WD))) calc(100% - var(--aug-br) + var(--aug-_Sin18cos72) * (var(--aug-br) - var(--aug-_WD))),
                    calc(100% - var(--aug-br) + var(--aug-_Sin54cos36) * (var(--aug-br) - var(--aug-_WD))) calc(100% - var(--aug-br) + var(--aug-_Sin36cos54) * (var(--aug-br) - var(--aug-_WD))),
                    calc(100% - var(--aug-br) + var(--aug-_Sin36cos54) * (var(--aug-br) - var(--aug-_WD))) calc(100% - var(--aug-br) + var(--aug-_Sin54cos36) * (var(--aug-br) - var(--aug-_WD))),
                    calc(100% - var(--aug-br) + var(--aug-_Sin18cos72) * (var(--aug-br) - var(--aug-_WD))) calc(100% - var(--aug-br) + var(--aug-_Sin72cos18) * (var(--aug-br) - var(--aug-_WD))),
                    var(--aug-_BrInset2JoinLX) var(--aug-_BrInset2JoinLY);
}
[augmented-ui~="bl-round"],
[augmented-ui~="bl-round"] > [augmented-ui~="bl-inherit"] {
  --aug-bl: 15px; /* radius */
  --aug-_Sin18cos72: 0.30901699437;
  --aug-_Sin36cos54: 0.58778525229;
  --aug-_Sin54cos36: 0.80901699437;
  --aug-_Sin72cos18: 0.95105651629;
  --aug-_BlJoinRX: var(--aug-bl);
  --aug-_BlJoinRY: 100%;
  --aug-_BlJoinTX: 0px;
  --aug-_BlJoinTY: calc(100% - var(--aug-bl));
  --aug-_BlPath: var(--aug-_BlJoinRX) var(--aug-_BlJoinRY),
            calc(var(--aug-bl) - var(--aug-_Sin18cos72) * var(--aug-bl)) calc(100% - var(--aug-bl) + var(--aug-_Sin72cos18) * var(--aug-bl)),
            calc(var(--aug-bl) - var(--aug-_Sin36cos54) * var(--aug-bl)) calc(100% - var(--aug-bl) + var(--aug-_Sin54cos36) * var(--aug-bl)),
            calc(var(--aug-bl) - var(--aug-_Sin54cos36) * var(--aug-bl)) calc(100% - var(--aug-bl) + var(--aug-_Sin36cos54) * var(--aug-bl)),
            calc(var(--aug-bl) - var(--aug-_Sin72cos18) * var(--aug-bl)) calc(100% - var(--aug-bl) + var(--aug-_Sin18cos72) * var(--aug-bl)),
            var(--aug-_BlJoinTX) var(--aug-_BlJoinTY);

  --aug-_BlInset1JoinRX: calc(var(--aug-bl) + var(--aug-_W));
  --aug-_BlInset1JoinRY: calc(100% - var(--aug-_W));
  --aug-_BlInset1JoinTX: var(--aug-_W);
  --aug-_BlInset1JoinTY: calc(100% - (var(--aug-bl) + var(--aug-_W)));
  --aug-_BlPathInset1: var(--aug-_BlInset1JoinRX) var(--aug-_BlInset1JoinRY),
                calc(var(--aug-bl) - var(--aug-_Sin18cos72) * (var(--aug-bl) - var(--aug-_W))) calc(100% - var(--aug-bl) + var(--aug-_Sin72cos18) * (var(--aug-bl) - var(--aug-_W))),
                calc(var(--aug-bl) - var(--aug-_Sin36cos54) * (var(--aug-bl) - var(--aug-_W))) calc(100% - var(--aug-bl) + var(--aug-_Sin54cos36) * (var(--aug-bl) - var(--aug-_W))),
                calc(var(--aug-bl) - var(--aug-_Sin54cos36) * (var(--aug-bl) - var(--aug-_W))) calc(100% - var(--aug-bl) + var(--aug-_Sin36cos54) * (var(--aug-bl) - var(--aug-_W))),
                calc(var(--aug-bl) - var(--aug-_Sin72cos18) * (var(--aug-bl) - var(--aug-_W))) calc(100% - var(--aug-bl) + var(--aug-_Sin18cos72) * (var(--aug-bl) - var(--aug-_W))),
                var(--aug-_BlInset1JoinTX) var(--aug-_BlInset1JoinTY);

  --aug-_BlInset2JoinRX: calc(var(--aug-bl) + var(--aug-_WD));
  --aug-_BlInset2JoinRY: calc(100% - var(--aug-_WD));
  --aug-_BlInset2JoinTX: var(--aug-_WD);
  --aug-_BlInset2JoinTY: calc(100% - (var(--aug-bl) + var(--aug-_WD)));
  --aug-_BlPathInset2: var(--aug-_BlInset2JoinRX) var(--aug-_BlInset2JoinRY),
                    calc(var(--aug-bl) - var(--aug-_Sin18cos72) * (var(--aug-bl) - var(--aug-_WD))) calc(100% - var(--aug-bl) + var(--aug-_Sin72cos18) * (var(--aug-bl) - var(--aug-_WD))),
                    calc(var(--aug-bl) - var(--aug-_Sin36cos54) * (var(--aug-bl) - var(--aug-_WD))) calc(100% - var(--aug-bl) + var(--aug-_Sin54cos36) * (var(--aug-bl) - var(--aug-_WD))),
                    calc(var(--aug-bl) - var(--aug-_Sin54cos36) * (var(--aug-bl) - var(--aug-_WD))) calc(100% - var(--aug-bl) + var(--aug-_Sin36cos54) * (var(--aug-bl) - var(--aug-_WD))),
                    calc(var(--aug-bl) - var(--aug-_Sin72cos18) * (var(--aug-bl) - var(--aug-_WD))) calc(100% - var(--aug-bl) + var(--aug-_Sin18cos72) * (var(--aug-bl) - var(--aug-_WD))),
                    var(--aug-_BlInset2JoinTX) var(--aug-_BlInset2JoinTY);
}

[augmented-ui~="tl-rect"],
[augmented-ui~="tl-rect"] > [augmented-ui~="tl-inherit"] {
  --aug-tl: 15px; /* size */
  --aug-_TlWidth: var(--aug-tl-width, var(--aug-tl));
  --aug-_TlHeight: var(--aug-tl-height, var(--aug-tl));
  --aug-_TlJoinBX: 0px;
  --aug-_TlJoinBY: var(--aug-_TlHeight);
  --aug-_TlJoinRX: var(--aug-_TlWidth);
  --aug-_TlJoinRY: 0px;
  --aug-_TlPath: var(--aug-_TlJoinBX) var(--aug-_TlJoinBY),
            var(--aug-_TlWidth) var(--aug-_TlHeight),
            var(--aug-_TlJoinRX) var(--aug-_TlJoinRY);

  --aug-_TlInset1JoinBX: var(--aug-_W);
  --aug-_TlInset1JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_W));
  --aug-_TlInset1JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_W));
  --aug-_TlInset1JoinRY: var(--aug-_W);
  --aug-_TlPathInset1: var(--aug-_TlInset1JoinBX) var(--aug-_TlInset1JoinBY),
                 calc(var(--aug-_W) + var(--aug-_TlWidth)) calc(var(--aug-_TlHeight) + var(--aug-_W)),
                 var(--aug-_TlInset1JoinRX) var(--aug-_TlInset1JoinRY);

  --aug-_TlInset2JoinBX: var(--aug-_WD);
  --aug-_TlInset2JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_WD));
  --aug-_TlInset2JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_WD));
  --aug-_TlInset2JoinRY: var(--aug-_WD);
  --aug-_TlPathInset2: var(--aug-_TlInset2JoinBX) var(--aug-_TlInset2JoinBY),
                 calc(var(--aug-_WD) + var(--aug-_TlWidth)) calc(var(--aug-_TlHeight) + var(--aug-_WD)),
                 var(--aug-_TlInset2JoinRX) var(--aug-_TlInset2JoinRY);
}
[augmented-ui~="tr-rect"],
[augmented-ui~="tr-rect"] > [augmented-ui~="tr-inherit"] {
  --aug-tr: 15px; /* size */
  --aug-_TrWidth: var(--aug-tr-width, var(--aug-tr));
  --aug-_TrHeight: var(--aug-tr-height, var(--aug-tr));
  --aug-_TrJoinLX: calc(100% - var(--aug-_TrWidth));
  --aug-_TrJoinLY: 0px;
  --aug-_TrJoinBX: 100%;
  --aug-_TrJoinBY: var(--aug-_TrHeight);
  --aug-_TrPath: var(--aug-_TrJoinLX) var(--aug-_TrJoinLY),
            calc(100% - var(--aug-_TrWidth)) var(--aug-_TrHeight),
            var(--aug-_TrJoinBX) var(--aug-_TrJoinBY);

  --aug-_TrInset1JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_W)));
  --aug-_TrInset1JoinLY: var(--aug-_W);
  --aug-_TrInset1JoinBX: calc(100% - var(--aug-_W));
  --aug-_TrInset1JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_W));
  --aug-_TrPathInset1: var(--aug-_TrInset1JoinLX) var(--aug-_TrInset1JoinLY),
                calc(100% - var(--aug-_W) - var(--aug-_TrWidth)) calc(var(--aug-_TrHeight) + var(--aug-_W)),
                var(--aug-_TrInset1JoinBX) var(--aug-_TrInset1JoinBY);

  --aug-_TrInset2JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_WD)));
  --aug-_TrInset2JoinLY: var(--aug-_WD);
  --aug-_TrInset2JoinBX: calc(100% - var(--aug-_WD));
  --aug-_TrInset2JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_WD));
  --aug-_TrPathInset2: var(--aug-_TrInset2JoinLX) var(--aug-_TrInset2JoinLY),
                    calc(100% - var(--aug-_WD) - var(--aug-_TrWidth)) calc(var(--aug-_TrHeight) + var(--aug-_WD)),
                    var(--aug-_TrInset2JoinBX) var(--aug-_TrInset2JoinBY);
}
[augmented-ui~="br-rect"],
[augmented-ui~="br-rect"] > [augmented-ui~="br-inherit"] {
  --aug-br: 15px; /* size */
  --aug-_BrWidth: var(--aug-br-width, var(--aug-br));
  --aug-_BrHeight: var(--aug-br-height, var(--aug-br));
  --aug-_BrJoinTX: 100%;
  --aug-_BrJoinTY: calc(100% - var(--aug-_BrHeight));
  --aug-_BrJoinLX: calc(100% - var(--aug-_BrWidth));
  --aug-_BrJoinLY: 100%;
  --aug-_BrPath: var(--aug-_BrJoinTX) var(--aug-_BrJoinTY),
            calc(100% - var(--aug-_BrWidth)) calc(100% - var(--aug-_BrHeight)),
            var(--aug-_BrJoinLX) var(--aug-_BrJoinLY);

  --aug-_BrInset1JoinTX: calc(100% - var(--aug-_W));
  --aug-_BrInset1JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_W)));
  --aug-_BrInset1JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_W)));
  --aug-_BrInset1JoinLY: calc(100% - var(--aug-_W));
  --aug-_BrPathInset1: var(--aug-_BrInset1JoinTX) var(--aug-_BrInset1JoinTY),
                 calc(100% - var(--aug-_W) - var(--aug-_BrWidth)) calc(100% - (var(--aug-_BrHeight) + var(--aug-_W))),
                 var(--aug-_BrInset1JoinLX) var(--aug-_BrInset1JoinLY);

  --aug-_BrInset2JoinTX: calc(100% - var(--aug-_WD));
  --aug-_BrInset2JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD)));
  --aug-_BrInset2JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_WD)));
  --aug-_BrInset2JoinLY: calc(100% - var(--aug-_WD));
  --aug-_BrPathInset2: var(--aug-_BrInset2JoinTX) var(--aug-_BrInset2JoinTY),
                     calc(100% - var(--aug-_WD) - var(--aug-_BrWidth)) calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD))),
                     var(--aug-_BrInset2JoinLX) var(--aug-_BrInset2JoinLY);
}
[augmented-ui~="bl-rect"],
[augmented-ui~="bl-rect"] > [augmented-ui~="bl-inherit"] {
  --aug-bl: 15px; /* size */
  --aug-_BlWidth: var(--aug-bl-width, var(--aug-bl));
  --aug-_BlHeight: var(--aug-bl-height, var(--aug-bl));
  --aug-_BlJoinRX: var(--aug-_BlWidth);
  --aug-_BlJoinRY: 100%;
  --aug-_BlJoinTX: 0px;
  --aug-_BlJoinTY: calc(100% - var(--aug-_BlHeight));
  --aug-_BlPath: var(--aug-_BlJoinRX) var(--aug-_BlJoinRY),
            var(--aug-_BlWidth) calc(100% - var(--aug-_BlHeight)),
            var(--aug-_BlJoinTX) var(--aug-_BlJoinTY);

  --aug-_BlInset1JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_W));
  --aug-_BlInset1JoinRY: calc(100% - var(--aug-_W));
  --aug-_BlInset1JoinTX: var(--aug-_W);
  --aug-_BlInset1JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_W)));
  --aug-_BlPathInset1: var(--aug-_BlInset1JoinRX) var(--aug-_BlInset1JoinRY),
                 calc(var(--aug-_BlWidth) + var(--aug-_W)) calc(100% - (var(--aug-_BlHeight) + var(--aug-_W))),
                 var(--aug-_BlInset1JoinTX) var(--aug-_BlInset1JoinTY);

  --aug-_BlInset2JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_WD));
  --aug-_BlInset2JoinRY: calc(100% - var(--aug-_WD));
  --aug-_BlInset2JoinTX: var(--aug-_WD);
  --aug-_BlInset2JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD)));
  --aug-_BlPathInset2: var(--aug-_BlInset2JoinRX) var(--aug-_BlInset2JoinRY),
                     calc(var(--aug-_BlWidth) + var(--aug-_WD)) calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD))),
                     var(--aug-_BlInset2JoinTX) var(--aug-_BlInset2JoinTY);
}
[augmented-ui~="t-rect"],
[augmented-ui~="t-rect"] > [augmented-ui~="t-inherit"] {
  --aug-t: 15px; /* size */
  --aug-_TWidth: var(--aug-t-width, calc(var(--aug-t) * 2));
  --aug-_THeight: var(--aug-t-height, var(--aug-t));
  --aug-_TOriginX: calc(var(--aug-t-origin-x, calc(var(--aug-_TlJoinRX, 0px) / 2 + var(--aug-_TrJoinLX, 100%) / 2)) + var(--aug-t-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_TPath: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2) 0px,
                  calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2) var(--aug-_THeight),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2) var(--aug-_THeight),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2) 0px;

  --aug-_TPathInset1: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W)) var(--aug-_W),
                        calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W)) calc(var(--aug-_THeight) + var(--aug-_W)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W)) calc(var(--aug-_THeight) + var(--aug-_W)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W)) var(--aug-_W);

  --aug-_TPathInset2: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD)) var(--aug-_WD),
                        calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD)) calc(var(--aug-_THeight) + var(--aug-_WD)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD)) calc(var(--aug-_THeight) + var(--aug-_WD)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD)) var(--aug-_WD);
}
[augmented-ui~="r-rect"],
[augmented-ui~="r-rect"] > [augmented-ui~="r-inherit"] {
  --aug-r: 15px; /* size */
  --aug-_RWidth: var(--aug-r-width, var(--aug-r));
  --aug-_RHeight: var(--aug-r-height, calc(var(--aug-r) * 2));
  --aug-_ROriginY: calc(var(--aug-r-origin-y, calc(var(--aug-_TrJoinBY, 0px) / 2 + var(--aug-_BrJoinTY, 100%) / 2)) + var(--aug-r-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_RPath: , 100% calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2),
                  calc(100% - var(--aug-_RWidth)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2),
                  calc(100% - var(--aug-_RWidth)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2),
                  100% calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2);

  --aug-_RPathInset1: , calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W))) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W))) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W)),
                        calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W));

  --aug-_RPathInset2: , calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD))) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD))) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD)),
                        calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD));
}
[augmented-ui~="b-rect"],
[augmented-ui~="b-rect"] > [augmented-ui~="b-inherit"] {
  --aug-b: 15px; /* size */
  --aug-_BWidth: var(--aug-b-width, calc(var(--aug-b) * 2));
  --aug-_BHeight: var(--aug-b-height, var(--aug-b));
  --aug-_BOriginX: calc(var(--aug-b-origin-x, calc(var(--aug-_BlJoinRX, 0px) / 2 + var(--aug-_BrJoinLX, 100%) / 2)) + var(--aug-b-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_BPath: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2) 100%,
                  calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2) calc(100% - var(--aug-_BHeight)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2) calc(100% - var(--aug-_BHeight)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2) 100%;

  --aug-_BPathInset1: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W)) calc(100% - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W)) calc(100% - var(--aug-_BHeight) - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W)) calc(100% - var(--aug-_BHeight) - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W)) calc(100% - var(--aug-_W));

  --aug-_BPathInset2: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD)) calc(100% - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD)) calc(100% - var(--aug-_BHeight) - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD)) calc(100% - var(--aug-_BHeight) - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD)) calc(100% - var(--aug-_WD));
}
[augmented-ui~="l-rect"],
[augmented-ui~="l-rect"] > [augmented-ui~="l-inherit"] {
  --aug-l: 15px; /* size */
  --aug-_LWidth: var(--aug-l-width, var(--aug-l));
  --aug-_LHeight: var(--aug-l-height, calc(var(--aug-l) * 2));
  --aug-_LOriginY: calc(var(--aug-l-origin-y, calc(var(--aug-_TlJoinBY, 0px) / 2 + var(--aug-_BlJoinTY, 100%) / 2)) + var(--aug-l-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_LPath: , 0px calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2),
                  var(--aug-_LWidth) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2),
                  var(--aug-_LWidth) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2),
                  0px calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2);

  --aug-_LPathInset1: , var(--aug-_W) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W)),
                        calc(var(--aug-_LWidth) + var(--aug-_W)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W)),
                        calc(var(--aug-_LWidth) + var(--aug-_W)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W)),
                        var(--aug-_W) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W));

  --aug-_LPathInset2: , var(--aug-_WD) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD)),
                        calc(var(--aug-_LWidth) + var(--aug-_WD)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD)),
                        calc(var(--aug-_LWidth) + var(--aug-_WD)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD)),
                        var(--aug-_WD) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD));
}

[augmented-ui~="tl-clip-x"],
[augmented-ui~="tl-clip-x"] > [augmented-ui~="tl-inherit"] {
  --aug-tl: 15px;
  --aug-_TlHeight: var(--aug-tl-height, var(--aug-tl));
  --aug-_TlNotch: var(--aug-_TlHeight); /* how much of width is the notch */
  --aug-_TlWidth: var(--aug-tl-width, calc(var(--aug-tl) + var(--aug-_TlNotch)));
  --aug-_TlJoinBX: 0px;
  --aug-_TlJoinBY: var(--aug-_TlHeight);
  --aug-_TlJoinRX: var(--aug-_TlWidth);
  --aug-_TlJoinRY: 0px;
  --aug-_TlPath: var(--aug-_TlJoinBX) var(--aug-_TlJoinBY),
            calc(var(--aug-_TlWidth) - var(--aug-_TlNotch)) var(--aug-_TlHeight),
            var(--aug-_TlJoinRX) var(--aug-_TlJoinRY);

  --aug-_TlInset1JoinBX: var(--aug-_W);
  --aug-_TlInset1JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_W));
  --aug-_TlInset1JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_W) / 2);
  --aug-_TlInset1JoinRY: var(--aug-_W);
  --aug-_TlPathInset1: var(--aug-_TlInset1JoinBX) var(--aug-_TlInset1JoinBY),
                 calc(var(--aug-_W) / 2 + var(--aug-_TlWidth) - var(--aug-_TlNotch)) calc(var(--aug-_TlHeight) + var(--aug-_W)),
                 var(--aug-_TlInset1JoinRX) var(--aug-_TlInset1JoinRY);

  --aug-_TlInset2JoinBX: var(--aug-_WD);
  --aug-_TlInset2JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_WD));
  --aug-_TlInset2JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_WD) / 2);
  --aug-_TlInset2JoinRY: var(--aug-_WD);
  --aug-_TlPathInset2: var(--aug-_TlInset2JoinBX) var(--aug-_TlInset2JoinBY),
                 calc(var(--aug-_WD) / 2 + var(--aug-_TlWidth) - var(--aug-_TlNotch)) calc(var(--aug-_TlHeight) + var(--aug-_WD)),
                 var(--aug-_TlInset2JoinRX) var(--aug-_TlInset2JoinRY);
}
[augmented-ui~="tr-clip-x"],
[augmented-ui~="tr-clip-x"] > [augmented-ui~="tr-inherit"] {
  --aug-tr: 15px;
  --aug-_TrHeight: var(--aug-tr-height, var(--aug-tr));
  --aug-_TrNotch: var(--aug-_TrHeight); /* how much of width is the notch */
  --aug-_TrWidth: var(--aug-tr-width, calc(var(--aug-tr) + var(--aug-_TrNotch)));
  --aug-_TrJoinLX: calc(100% - var(--aug-_TrWidth));
  --aug-_TrJoinLY: 0px;
  --aug-_TrJoinBX: 100%;
  --aug-_TrJoinBY: var(--aug-_TrHeight);
  --aug-_TrPath: var(--aug-_TrJoinLX) var(--aug-_TrJoinLY),
            calc(100% - var(--aug-_TrWidth) + var(--aug-_TrNotch)) var(--aug-_TrHeight),
            var(--aug-_TrJoinBX) var(--aug-_TrJoinBY);

  --aug-_TrInset1JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_W) / 2));
  --aug-_TrInset1JoinLY: var(--aug-_W);
  --aug-_TrInset1JoinBX: calc(100% - var(--aug-_W));
  --aug-_TrInset1JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_W));
  --aug-_TrPathInset1: var(--aug-_TrInset1JoinLX) var(--aug-_TrInset1JoinLY),
                calc(100% - var(--aug-_W) / 2 - var(--aug-_TrWidth) + var(--aug-_TrNotch)) calc(var(--aug-_TrHeight) + var(--aug-_W)),
                var(--aug-_TrInset1JoinBX) var(--aug-_TrInset1JoinBY);

  --aug-_TrInset2JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_WD) / 2));
  --aug-_TrInset2JoinLY: var(--aug-_WD);
  --aug-_TrInset2JoinBX: calc(100% - var(--aug-_WD));
  --aug-_TrInset2JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_WD));
  --aug-_TrPathInset2: var(--aug-_TrInset2JoinLX) var(--aug-_TrInset2JoinLY),
                    calc(100% - var(--aug-_WD) / 2 - var(--aug-_TrWidth) + var(--aug-_TrNotch)) calc(var(--aug-_TrHeight) + var(--aug-_WD)),
                    var(--aug-_TrInset2JoinBX) var(--aug-_TrInset2JoinBY);
}
[augmented-ui~="br-clip-x"],
[augmented-ui~="br-clip-x"] > [augmented-ui~="br-inherit"] {
  --aug-br: 15px; /* size */
  --aug-_BrHeight: var(--aug-br-height, var(--aug-br));
  --aug-_BrNotch: var(--aug-_BrHeight); /* how much of width is the notch */
  --aug-_BrWidth: var(--aug-br-width, calc(var(--aug-br) + var(--aug-_BrNotch)));
  --aug-_BrJoinTX: 100%;
  --aug-_BrJoinTY: calc(100% - var(--aug-_BrHeight));
  --aug-_BrJoinLX: calc(100% - var(--aug-_BrWidth));
  --aug-_BrJoinLY: 100%;
  --aug-_BrPath: var(--aug-_BrJoinTX) var(--aug-_BrJoinTY),
            calc(100% - var(--aug-_BrWidth) + var(--aug-_BrNotch)) calc(100% - var(--aug-_BrHeight)),
            var(--aug-_BrJoinLX) var(--aug-_BrJoinLY);

  --aug-_BrInset1JoinTX: calc(100% - var(--aug-_W));
  --aug-_BrInset1JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_W)));
  --aug-_BrInset1JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_W) / 2));
  --aug-_BrInset1JoinLY: calc(100% - var(--aug-_W));
  --aug-_BrPathInset1: var(--aug-_BrInset1JoinTX) var(--aug-_BrInset1JoinTY),
                 calc(100% - var(--aug-_W) / 2 - var(--aug-_BrWidth) + var(--aug-_BrNotch)) calc(100% - (var(--aug-_BrHeight) + var(--aug-_W))),
                 var(--aug-_BrInset1JoinLX) var(--aug-_BrInset1JoinLY);

  --aug-_BrInset2JoinTX: calc(100% - var(--aug-_WD));
  --aug-_BrInset2JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD)));
  --aug-_BrInset2JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_WD) / 2));
  --aug-_BrInset2JoinLY: calc(100% - var(--aug-_WD));
  --aug-_BrPathInset2: var(--aug-_BrInset2JoinTX) var(--aug-_BrInset2JoinTY),
                     calc(100% - var(--aug-_WD) / 2 - var(--aug-_BrWidth) + var(--aug-_BrNotch)) calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD))),
                     var(--aug-_BrInset2JoinLX) var(--aug-_BrInset2JoinLY);
}
[augmented-ui~="bl-clip-x"],
[augmented-ui~="bl-clip-x"] > [augmented-ui~="bl-inherit"] {
  --aug-bl: 15px; /* size */
  --aug-_BlHeight: var(--aug-bl-height, var(--aug-bl));
  --aug-_BlNotch: var(--aug-_BlHeight); /* how much of width is the notch */
  --aug-_BlWidth: var(--aug-bl-width, calc(var(--aug-bl) + var(--aug-_BlNotch)));
  --aug-_BlJoinRX: var(--aug-_BlWidth);
  --aug-_BlJoinRY: 100%;
  --aug-_BlJoinTX: 0px;
  --aug-_BlJoinTY: calc(100% - var(--aug-_BlHeight));
  --aug-_BlPath: var(--aug-_BlJoinRX) var(--aug-_BlJoinRY),
            calc(var(--aug-_BlWidth) - var(--aug-_BlNotch)) calc(100% - var(--aug-_BlHeight)),
            var(--aug-_BlJoinTX) var(--aug-_BlJoinTY);

  --aug-_BlInset1JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_W) / 2);
  --aug-_BlInset1JoinRY: calc(100% - var(--aug-_W));
  --aug-_BlInset1JoinTX: var(--aug-_W);
  --aug-_BlInset1JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_W)));
  --aug-_BlPathInset1: var(--aug-_BlInset1JoinRX) var(--aug-_BlInset1JoinRY),
                 calc(var(--aug-_BlWidth) + var(--aug-_W) / 2 - var(--aug-_BlNotch)) calc(100% - (var(--aug-_BlHeight) + var(--aug-_W))),
                 var(--aug-_BlInset1JoinTX) var(--aug-_BlInset1JoinTY);

  --aug-_BlInset2JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_WD) / 2);
  --aug-_BlInset2JoinRY: calc(100% - var(--aug-_WD));
  --aug-_BlInset2JoinTX: var(--aug-_WD);
  --aug-_BlInset2JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD)));
  --aug-_BlPathInset2: var(--aug-_BlInset2JoinRX) var(--aug-_BlInset2JoinRY),
                     calc(var(--aug-_BlWidth) + var(--aug-_WD) / 2 - var(--aug-_BlNotch)) calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD))),
                     var(--aug-_BlInset2JoinTX) var(--aug-_BlInset2JoinTY);
}
[augmented-ui~="t-clip-x"],
[augmented-ui~="t-clip-x"] > [augmented-ui~="t-inherit"] {
  --aug-t: 15px; /* size */
  --aug-_THeight: var(--aug-t-height, var(--aug-t));
  --aug-_TNotch: var(--aug-_THeight); /* how much of half the width is the notch */
  --aug-_TWidth: var(--aug-t-width, calc(var(--aug-t) * 2 + var(--aug-_TNotch) * 2));
  --aug-_TOriginX: calc(var(--aug-t-origin-x, calc(var(--aug-_TlJoinRX, 0px) / 2 + var(--aug-_TrJoinLX, 100%) / 2)) + var(--aug-t-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_TPath: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2) 0px,
                  calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 + var(--aug-_TNotch)) var(--aug-_THeight),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 - var(--aug-_TNotch)) var(--aug-_THeight),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2) 0px;

  --aug-_TPathInset1: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W) / 2) var(--aug-_W),
                        calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W) / 2 + var(--aug-_TNotch)) calc(var(--aug-_THeight) + var(--aug-_W)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W) / 2 - var(--aug-_TNotch)) calc(var(--aug-_THeight) + var(--aug-_W)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W) / 2) var(--aug-_W);

  --aug-_TPathInset2: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD) / 2) var(--aug-_WD),
                        calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD) / 2 + var(--aug-_TNotch)) calc(var(--aug-_THeight) + var(--aug-_WD)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD) / 2 - var(--aug-_TNotch)) calc(var(--aug-_THeight) + var(--aug-_WD)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD) / 2) var(--aug-_WD);
}
[augmented-ui~="r-clip-x"],
[augmented-ui~="r-clip-x"] > [augmented-ui~="r-inherit"] {
  --aug-r: 15px; /* size */
  --aug-_RHeight: var(--aug-r-height, calc(var(--aug-r) * 2));
  --aug-_RNotch: calc(var(--aug-_RHeight) / 2); /* how much of width is the notch */
  --aug-_RWidth: var(--aug-r-width, calc(var(--aug-r) + var(--aug-_RNotch)));
  --aug-_ROriginY: calc(var(--aug-r-origin-y, calc(var(--aug-_TrJoinBY, 0px) / 2 + var(--aug-_BrJoinTY, 100%) / 2)) + var(--aug-r-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_RPath: , 100% calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2),
                  calc(100% - var(--aug-_RWidth) + var(--aug-_RNotch)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2),
                  calc(100% - var(--aug-_RWidth)) var(--aug-_ROriginY),
                  calc(100% - var(--aug-_RWidth) + var(--aug-_RNotch)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2),
                  100% calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2);

  --aug-_RPathInset1: , calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W) / 2 - var(--aug-_RNotch))) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W) * 1.5)) var(--aug-_ROriginY),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W) / 2 - var(--aug-_RNotch))) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W)),
                        calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W));

  --aug-_RPathInset2: , calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD) / 2 - var(--aug-_RNotch))) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD) * 1.5)) var(--aug-_ROriginY),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD) / 2 - var(--aug-_RNotch))) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD)),
                        calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD));
}
[augmented-ui~="b-clip-x"],
[augmented-ui~="b-clip-x"] > [augmented-ui~="b-inherit"] {
  --aug-b: 15px; /* size */
  --aug-_BHeight: var(--aug-b-height, var(--aug-b));
  --aug-_BNotch: var(--aug-_BHeight); /* how much of half the width is the notch */
  --aug-_BWidth: var(--aug-b-width, calc(var(--aug-b) * 2 + var(--aug-_BNotch) * 2));
  --aug-_BOriginX: calc(var(--aug-b-origin-x, calc(var(--aug-_BlJoinRX, 0px) / 2 + var(--aug-_BrJoinLX, 100%) / 2)) + var(--aug-b-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_BPath: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2) 100%,
                  calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 - var(--aug-_BNotch)) calc(100% - var(--aug-_BHeight)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 + var(--aug-_BNotch)) calc(100% - var(--aug-_BHeight)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2) 100%;

  --aug-_BPathInset1: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W) / 2) calc(100% - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W) / 2 - var(--aug-_BNotch)) calc(100% - var(--aug-_BHeight) - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W) / 2 + var(--aug-_BNotch)) calc(100% - var(--aug-_BHeight) - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W) / 2) calc(100% - var(--aug-_W));

  --aug-_BPathInset2: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD) / 2) calc(100% - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD) / 2 - var(--aug-_BNotch)) calc(100% - var(--aug-_BHeight) - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD) / 2 + var(--aug-_BNotch)) calc(100% - var(--aug-_BHeight) - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD) / 2) calc(100% - var(--aug-_WD));
}
[augmented-ui~="l-clip-x"],
[augmented-ui~="l-clip-x"] > [augmented-ui~="l-inherit"] {
  --aug-l: 15px; /* size */
  --aug-_LHeight: var(--aug-l-height, calc(var(--aug-l) * 2));
  --aug-_LNotch: calc(var(--aug-_LHeight) / 2); /* how much of width is the notch */
  --aug-_LWidth: var(--aug-l-width, calc(var(--aug-l) + var(--aug-_LNotch)));
  --aug-_LOriginY: calc(var(--aug-l-origin-y, calc(var(--aug-_TlJoinBY, 0px) / 2 + var(--aug-_BlJoinTY, 100%) / 2)) + var(--aug-l-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_LPath: , 0px calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2),
                  calc(var(--aug-_LWidth) - var(--aug-_LNotch)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2),
                  calc(var(--aug-_LWidth)) var(--aug-_LOriginY),
                  calc(var(--aug-_LWidth) - var(--aug-_LNotch)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2),
                  0px calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2);

  --aug-_LPathInset1: , var(--aug-_W) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W)),
                        calc(var(--aug-_LWidth) + var(--aug-_W) / 2 - var(--aug-_LNotch)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W)),
                        calc(var(--aug-_LWidth) + var(--aug-_W) * 1.5) var(--aug-_LOriginY),
                        calc(var(--aug-_LWidth) + var(--aug-_W) / 2 - var(--aug-_LNotch)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W)),
                        var(--aug-_W) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W));

  --aug-_LPathInset2: , var(--aug-_WD) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD)),
                        calc(var(--aug-_LWidth) + var(--aug-_WD) / 2 - var(--aug-_LNotch)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD)),
                        calc(var(--aug-_LWidth) + var(--aug-_WD) * 1.5) var(--aug-_LOriginY),
                        calc(var(--aug-_LWidth) + var(--aug-_WD) / 2 - var(--aug-_LNotch)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD)),
                        var(--aug-_WD) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD));
}

[augmented-ui~="tl-clip-y"],
[augmented-ui~="tl-clip-y"] > [augmented-ui~="tl-inherit"] {
  --aug-tl: 15px; /* size */
  --aug-_TlWidth: var(--aug-tl-width, var(--aug-tl));
  --aug-_TlNotch: var(--aug-_TlWidth); /* how much of height is the notch */
  --aug-_TlHeight: var(--aug-tl-height, calc(var(--aug-tl) + var(--aug-_TlNotch)));
  --aug-_TlJoinBX: 0px;
  --aug-_TlJoinBY: var(--aug-_TlHeight);
  --aug-_TlJoinRX: var(--aug-_TlWidth);
  --aug-_TlJoinRY: 0px;
  --aug-_TlPath: var(--aug-_TlJoinBX) var(--aug-_TlJoinBY),
            var(--aug-_TlWidth) calc(var(--aug-_TlHeight) - var(--aug-_TlNotch)),
            var(--aug-_TlJoinRX) var(--aug-_TlJoinRY);

  --aug-_TlInset1JoinBX: var(--aug-_W);
  --aug-_TlInset1JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_W) / 2);
  --aug-_TlInset1JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_W));
  --aug-_TlInset1JoinRY: var(--aug-_W);
  --aug-_TlPathInset1: var(--aug-_TlInset1JoinBX) var(--aug-_TlInset1JoinBY),
                 calc(var(--aug-_W) + var(--aug-_TlWidth)) calc(var(--aug-_TlHeight) + var(--aug-_W) / 2 - var(--aug-_TlNotch)),
                 var(--aug-_TlInset1JoinRX) var(--aug-_TlInset1JoinRY);

  --aug-_TlInset2JoinBX: var(--aug-_WD);
  --aug-_TlInset2JoinBY: calc(var(--aug-_TlHeight) + var(--aug-_WD) / 2);
  --aug-_TlInset2JoinRX: calc(var(--aug-_TlWidth) + var(--aug-_WD));
  --aug-_TlInset2JoinRY: var(--aug-_WD);
  --aug-_TlPathInset2: var(--aug-_TlInset2JoinBX) var(--aug-_TlInset2JoinBY),
                 calc(var(--aug-_WD) + var(--aug-_TlWidth)) calc(var(--aug-_TlHeight) + var(--aug-_WD) / 2 - var(--aug-_TlNotch)),
                 var(--aug-_TlInset2JoinRX) var(--aug-_TlInset2JoinRY);
}
[augmented-ui~="tr-clip-y"],
[augmented-ui~="tr-clip-y"] > [augmented-ui~="tr-inherit"] {
  --aug-tr: 15px; /* size */
  --aug-_TrWidth: var(--aug-tr-width, var(--aug-tr));
  --aug-_TrNotch: var(--aug-_TrWidth); /* how much of height is the notch */
  --aug-_TrHeight: var(--aug-tr-height, calc(var(--aug-tr) + var(--aug-_TrNotch)));
  --aug-_TrJoinLX: calc(100% - var(--aug-_TrWidth));
  --aug-_TrJoinLY: 0px;
  --aug-_TrJoinBX: 100%;
  --aug-_TrJoinBY: var(--aug-_TrHeight);
  --aug-_TrPath: var(--aug-_TrJoinLX) var(--aug-_TrJoinLY),
            calc(100% - var(--aug-_TrWidth)) calc(var(--aug-_TrHeight) - var(--aug-_TrNotch)),
            var(--aug-_TrJoinBX) var(--aug-_TrJoinBY);

  --aug-_TrInset1JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_W)));
  --aug-_TrInset1JoinLY: var(--aug-_W);
  --aug-_TrInset1JoinBX: calc(100% - var(--aug-_W));
  --aug-_TrInset1JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_W) / 2);
  --aug-_TrPathInset1: var(--aug-_TrInset1JoinLX) var(--aug-_TrInset1JoinLY),
                calc(100% - var(--aug-_W) - var(--aug-_TrWidth)) calc(var(--aug-_TrHeight) + var(--aug-_W) / 2 - var(--aug-_TrNotch)),
                var(--aug-_TrInset1JoinBX) var(--aug-_TrInset1JoinBY);

  --aug-_TrInset2JoinLX: calc(100% - (var(--aug-_TrWidth) + var(--aug-_WD)));
  --aug-_TrInset2JoinLY: var(--aug-_WD);
  --aug-_TrInset2JoinBX: calc(100% - var(--aug-_WD));
  --aug-_TrInset2JoinBY: calc(var(--aug-_TrHeight) + var(--aug-_WD) / 2);
  --aug-_TrPathInset2: var(--aug-_TrInset2JoinLX) var(--aug-_TrInset2JoinLY),
                    calc(100% - var(--aug-_WD) - var(--aug-_TrWidth)) calc(var(--aug-_TrHeight) + var(--aug-_WD) / 2 - var(--aug-_TrNotch)),
                    var(--aug-_TrInset2JoinBX) var(--aug-_TrInset2JoinBY);
}
[augmented-ui~="br-clip-y"],
[augmented-ui~="br-clip-y"] > [augmented-ui~="br-inherit"] {
  --aug-br: 15px; /* size */
  --aug-_BrWidth: var(--aug-br-width, var(--aug-br));
  --aug-_BrNotch: var(--aug-_BrWidth); /* how much of height is the notch */
  --aug-_BrHeight: var(--aug-br-height, calc(var(--aug-br) + var(--aug-_BrNotch)));
  --aug-_BrJoinTX: 100%;
  --aug-_BrJoinTY: calc(100% - var(--aug-_BrHeight));
  --aug-_BrJoinLX: calc(100% - var(--aug-_BrWidth));
  --aug-_BrJoinLY: 100%;
  --aug-_BrPath: var(--aug-_BrJoinTX) var(--aug-_BrJoinTY),
            calc(100% - var(--aug-_BrWidth)) calc(100% - var(--aug-_BrHeight) + var(--aug-_BrNotch)),
            var(--aug-_BrJoinLX) var(--aug-_BrJoinLY);

  --aug-_BrInset1JoinTX: calc(100% - var(--aug-_W));
  --aug-_BrInset1JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_W) / 2));
  --aug-_BrInset1JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_W)));
  --aug-_BrInset1JoinLY: calc(100% - var(--aug-_W));
  --aug-_BrPathInset1: var(--aug-_BrInset1JoinTX) var(--aug-_BrInset1JoinTY),
                 calc(100% - var(--aug-_W) - var(--aug-_BrWidth)) calc(100% - (var(--aug-_BrHeight) + var(--aug-_W) / 2) + var(--aug-_BrNotch)),
                 var(--aug-_BrInset1JoinLX) var(--aug-_BrInset1JoinLY);

  --aug-_BrInset2JoinTX: calc(100% - var(--aug-_WD));
  --aug-_BrInset2JoinTY: calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD) / 2));
  --aug-_BrInset2JoinLX: calc(100% - (var(--aug-_BrWidth) + var(--aug-_WD)));
  --aug-_BrInset2JoinLY: calc(100% - var(--aug-_WD));
  --aug-_BrPathInset2: var(--aug-_BrInset2JoinTX) var(--aug-_BrInset2JoinTY),
                     calc(100% - var(--aug-_WD) - var(--aug-_BrWidth)) calc(100% - (var(--aug-_BrHeight) + var(--aug-_WD) / 2) + var(--aug-_BrNotch)),
                     var(--aug-_BrInset2JoinLX) var(--aug-_BrInset2JoinLY);
}
[augmented-ui~="bl-clip-y"],
[augmented-ui~="bl-clip-y"] > [augmented-ui~="bl-inherit"] {
  --aug-bl: 15px; /* size */
  --aug-_BlWidth: var(--aug-bl-width, var(--aug-bl));
  --aug-_BlNotch: var(--aug-_BlWidth); /* how much of height is the notch */
  --aug-_BlHeight: var(--aug-bl-height, calc(var(--aug-bl) + var(--aug-_BlNotch)));
  --aug-_BlJoinRX: var(--aug-_BlWidth);
  --aug-_BlJoinRY: 100%;
  --aug-_BlJoinTX: 0px;
  --aug-_BlJoinTY: calc(100% - var(--aug-_BlHeight));
  --aug-_BlPath: var(--aug-_BlJoinRX) var(--aug-_BlJoinRY),
            var(--aug-_BlWidth) calc(100% - var(--aug-_BlHeight) + var(--aug-_BlNotch)),
            var(--aug-_BlJoinTX) var(--aug-_BlJoinTY);

  --aug-_BlInset1JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_W));
  --aug-_BlInset1JoinRY: calc(100% - var(--aug-_W));
  --aug-_BlInset1JoinTX: var(--aug-_W);
  --aug-_BlInset1JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_W) / 2));
  --aug-_BlPathInset1: var(--aug-_BlInset1JoinRX) var(--aug-_BlInset1JoinRY),
                 calc(var(--aug-_BlWidth) + var(--aug-_W)) calc(100% - (var(--aug-_BlHeight) + var(--aug-_W) / 2) + var(--aug-_BlNotch)),
                 var(--aug-_BlInset1JoinTX) var(--aug-_BlInset1JoinTY);

  --aug-_BlInset2JoinRX: calc(var(--aug-_BlWidth) + var(--aug-_WD));
  --aug-_BlInset2JoinRY: calc(100% - var(--aug-_WD));
  --aug-_BlInset2JoinTX: var(--aug-_WD);
  --aug-_BlInset2JoinTY: calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD) / 2));
  --aug-_BlPathInset2: var(--aug-_BlInset2JoinRX) var(--aug-_BlInset2JoinRY),
                     calc(var(--aug-_BlWidth) + var(--aug-_WD)) calc(100% - (var(--aug-_BlHeight) + var(--aug-_WD) / 2) + var(--aug-_BlNotch)),
                     var(--aug-_BlInset2JoinTX) var(--aug-_BlInset2JoinTY);
}

[augmented-ui~="t-clip-y"],
[augmented-ui~="t-clip-y"] > [augmented-ui~="t-inherit"] {
  --aug-t: 15px; /* size */
  --aug-_TWidth: var(--aug-t-width, var(--aug-t) * 2);
  --aug-_TNotch: calc(var(--aug-_TWidth) / 2); /* how much of height is the notch */
  --aug-_THeight: var(--aug-t-height, calc(var(--aug-t) + var(--aug-_TNotch)));
  --aug-_TOriginX: calc(var(--aug-t-origin-x, calc(var(--aug-_TlJoinRX, 0px) / 2 + var(--aug-_TrJoinLX, 100%) / 2)) + var(--aug-t-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_TPath: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2) 0px,
                  calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2) calc(var(--aug-_THeight) - var(--aug-_TNotch)),
                  var(--aug-_TOriginX) var(--aug-_THeight),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2) calc(var(--aug-_THeight) - var(--aug-_TNotch)),
                  calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2) 0px;

  --aug-_TPathInset1: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W)) var(--aug-_W),
                        calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_W)) calc(var(--aug-_THeight) + var(--aug-_W) / 2 - var(--aug-_TNotch)),
                        var(--aug-_TOriginX) calc(var(--aug-_THeight) + var(--aug-_W) * 1.5),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W)) calc(var(--aug-_THeight) + var(--aug-_W) / 2 - var(--aug-_TNotch)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_W)) var(--aug-_W);

  --aug-_TPathInset2: , calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD)) var(--aug-_WD),
                        calc(var(--aug-_TOriginX) - var(--aug-_TWidth) / 2 - var(--aug-_WD)) calc(var(--aug-_THeight) + var(--aug-_WD) / 2 - var(--aug-_TNotch)),
                        var(--aug-_TOriginX) calc(var(--aug-_THeight) + var(--aug-_WD) * 1.5),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD)) calc(var(--aug-_THeight) + var(--aug-_WD) / 2 - var(--aug-_TNotch)),
                        calc(var(--aug-_TOriginX) + var(--aug-_TWidth) / 2 + var(--aug-_WD)) var(--aug-_WD);
}
[augmented-ui~="r-clip-y"],
[augmented-ui~="r-clip-y"] > [augmented-ui~="r-inherit"] {
  --aug-r: 15px; /* size */
  --aug-_RWidth: var(--aug-r-width, var(--aug-r));
  --aug-_RNotch: var(--aug-_RWidth); /* how much of half the height is the notch */
  --aug-_RHeight: var(--aug-r-height, calc(var(--aug-r) * 2 + var(--aug-_RNotch) * 2));
  --aug-_ROriginY: calc(var(--aug-r-origin-y, calc(var(--aug-_TrJoinBY, 0px) / 2 + var(--aug-_BrJoinTY, 100%) / 2)) + var(--aug-r-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_RPath: , 100% calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2),
                  calc(100% - var(--aug-_RWidth)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 + var(--aug-_RNotch)),
                  calc(100% - var(--aug-_RWidth)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 - var(--aug-_RNotch)),
                  100% calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2);

  --aug-_RPathInset1: , calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W) / 2),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W))) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_W) / 2 + var(--aug-_RNotch)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_W))) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W) / 2 - var(--aug-_RNotch)),
                        calc(100% - var(--aug-_W)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_W) / 2);

  --aug-_RPathInset2: , calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD) / 2),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD))) calc(var(--aug-_ROriginY) - var(--aug-_RHeight) / 2 - var(--aug-_WD) / 2 + var(--aug-_RNotch)),
                        calc(100% - (var(--aug-_RWidth) + var(--aug-_WD))) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD) / 2 - var(--aug-_RNotch)),
                        calc(100% - var(--aug-_WD)) calc(var(--aug-_ROriginY) + var(--aug-_RHeight) / 2 + var(--aug-_WD) / 2);
}
[augmented-ui~="b-clip-y"],
[augmented-ui~="b-clip-y"] > [augmented-ui~="b-inherit"] {
  --aug-b: 15px; /* size */
  --aug-_BWidth: var(--aug-b-width, var(--aug-b) * 2);
  --aug-_BNotch: calc(var(--aug-_BWidth) / 2); /* how much of height is the notch */
  --aug-_BHeight: var(--aug-b-height, calc(var(--aug-b) + var(--aug-_BNotch)));
  --aug-_BOriginX: calc(var(--aug-b-origin-x, calc(var(--aug-_BlJoinRX, 0px) / 2 + var(--aug-_BrJoinLX, 100%) / 2)) + var(--aug-b-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_BPath: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2) 100%,
                  calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2) calc(100% - var(--aug-_BHeight) + var(--aug-_BNotch)),
                  var(--aug-_BOriginX) calc(100% - var(--aug-_BHeight)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2) calc(100% - var(--aug-_BHeight) + var(--aug-_BNotch)),
                  calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2) 100%;

  --aug-_BPathInset1: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W)) calc(100% - var(--aug-_W)),
                        calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_W)) calc(100% - (var(--aug-_BHeight) + var(--aug-_W) / 2 - var(--aug-_BNotch))),
                        var(--aug-_BOriginX) calc(100% - (var(--aug-_BHeight) + var(--aug-_W) * 1.5)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W)) calc(100% - (var(--aug-_BHeight) + var(--aug-_W) / 2 - var(--aug-_BNotch))),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_W)) calc(100% - var(--aug-_W));

  --aug-_BPathInset2: , calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD)) calc(100% - var(--aug-_WD)),
                        calc(var(--aug-_BOriginX) + var(--aug-_BWidth) / 2 + var(--aug-_WD)) calc(100% - (var(--aug-_BHeight) + var(--aug-_WD) / 2 - var(--aug-_BNotch))),
                        var(--aug-_BOriginX) calc(100% - (var(--aug-_BHeight) + var(--aug-_WD) * 1.5)),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD)) calc(100% - (var(--aug-_BHeight) + var(--aug-_WD) / 2 - var(--aug-_BNotch))),
                        calc(var(--aug-_BOriginX) - var(--aug-_BWidth) / 2 - var(--aug-_WD)) calc(100% - var(--aug-_WD));
}
[augmented-ui~="l-clip-y"],
[augmented-ui~="l-clip-y"] > [augmented-ui~="l-inherit"] {
  --aug-l: 15px; /* size */
  --aug-_LWidth: var(--aug-l-width, var(--aug-l));
  --aug-_LNotch: var(--aug-_LWidth); /* how much of half the height is the notch */
  --aug-_LHeight: var(--aug-l-height, calc(var(--aug-l) * 2 + var(--aug-_LNotch) * 2));
  --aug-_LOriginY: calc(var(--aug-l-origin-y, calc(var(--aug-_TlJoinBY, 0px) / 2 + var(--aug-_BlJoinTY, 100%) / 2)) + var(--aug-l-offset, 0px));
  /* edge augs start with their comma path joiner - corners don't */
  --aug-_LPath: , 0px calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2),
                  var(--aug-_LWidth) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 - var(--aug-_LNotch)),
                  var(--aug-_LWidth) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 + var(--aug-_LNotch)),
                  0px calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2);

  --aug-_LPathInset1: , var(--aug-_W) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W) / 2),
                        calc(var(--aug-_LWidth) + var(--aug-_W)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_W) / 2 - var(--aug-_LNotch)),
                        calc(var(--aug-_LWidth) + var(--aug-_W)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W) / 2 + var(--aug-_LNotch)),
                        var(--aug-_W) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_W) / 2);

  --aug-_LPathInset2: , var(--aug-_WD) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD) / 2),
                        calc(var(--aug-_LWidth) + var(--aug-_WD)) calc(var(--aug-_LOriginY) + var(--aug-_LHeight) / 2 + var(--aug-_WD) / 2 - var(--aug-_LNotch)),
                        calc(var(--aug-_LWidth) + var(--aug-_WD)) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD) / 2 + var(--aug-_LNotch)),
                        var(--aug-_WD) calc(var(--aug-_LOriginY) - var(--aug-_LHeight) / 2 - var(--aug-_WD) / 2);
}

[augmented-ui~="tl-border-el-clean"],
[augmented-ui~="tl-border-clean"]::after {
  /* if --aug-_W <= --aug-tl */
  /* if border width is less than top-left effect size, don't apply an effect on the inner part of the tl border effect */
  --aug-_TlPathInset1: var(--aug-_W) var(--aug-_W);
}
[augmented-ui~="tl-inset-el-clean"],
[augmented-ui~="tl-inset-clean"]::before,
[augmented-ui~="tl-border-el-clean"],
[augmented-ui~="tl-border-clean"]::after {
  /* if --aug-_WD <= --aug-tl OR --aug-_W <= --aug-tl */
  /* if border width + inset distance is less than top-left effect size,
    OR if border width alone is less than top-left effect size,
    don't apply an effect on inset more tl either
  */
  --aug-_TlPathInset2: var(--aug-_WD) var(--aug-_WD);
}

[augmented-ui~="tr-border-el-clean"],
[augmented-ui~="tr-border-clean"]::after { --aug-_TrPathInset1: var(--aug-_100W) var(--aug-_W); }
[augmented-ui~="tr-inset-el-clean"],
[augmented-ui~="tr-inset-clean"]::before,
[augmented-ui~="tr-border-el-clean"],
[augmented-ui~="tr-border-clean"]::after { --aug-_TrPathInset2: var(--aug-_100WD) var(--aug-_WD); }

[augmented-ui~="br-border-el-clean"],
[augmented-ui~="br-border-clean"]::after { --aug-_BrPathInset1: var(--aug-_100W) var(--aug-_100W); }
[augmented-ui~="br-inset-el-clean"],
[augmented-ui~="br-inset-clean"]::before,
[augmented-ui~="br-border-el-clean"],
[augmented-ui~="br-border-clean"]::after { --aug-_BrPathInset2: var(--aug-_100WD) var(--aug-_100WD); }

[augmented-ui~="bl-border-el-clean"],
[augmented-ui~="bl-border-clean"]::after { --aug-_BlPathInset1: var(--aug-_W) var(--aug-_100W); }
[augmented-ui~="bl-inset-el-clean"],
[augmented-ui~="bl-inset-clean"]::before,
[augmented-ui~="bl-border-el-clean"],
[augmented-ui~="bl-border-clean"]::after { --aug-_BlPathInset2: var(--aug-_WD) var(--aug-_100WD); }

[augmented-ui~="exe"]::after {
  content: "";
  display: var(--aug-border-bg, none);
}
[augmented-ui~="border-el"],
[augmented-ui~="exe"]::after {
  opacity: var(--aug-border-opacity, 1);
  position: absolute;
  left: 0px;
  top: 0px;
  right: 0px;
  bottom: 0px;
  pointer-events: none;
  -webkit-clip-path: polygon(
    var(--aug-_TlPathInset1, var(--aug-_W) var(--aug-_W))
    var(--aug-_TPathInset1, ),
    var(--aug-_TrPathInset1, var(--aug-_100W) var(--aug-_W))
    var(--aug-_RPathInset1, ),
    var(--aug-_BrPathInset1, var(--aug-_100W) var(--aug-_100W))
    var(--aug-_BPathInset1, ),
    var(--aug-_BlPathInset1, var(--aug-_W) var(--aug-_100W))
    var(--aug-_LPathInset1, ),
    var(--aug-_TlInset1JoinBX, var(--aug-_W)) var(--aug-_TlInset1JoinBY, var(--aug-_W)),
    0px var(--aug-_TlInset1JoinBY, var(--aug-_W)),
    0px 100%, 100% 100%, 100% 0px, 0px 0px,
    0px var(--aug-_TlInset1JoinBY, var(--aug-_W)),
    var(--aug-_TlInset1JoinBX, var(--aug-_W)) var(--aug-_TlInset1JoinBY, var(--aug-_W))
  );
          clip-path: polygon(
    var(--aug-_TlPathInset1, var(--aug-_W) var(--aug-_W))
    var(--aug-_TPathInset1, ),
    var(--aug-_TrPathInset1, var(--aug-_100W) var(--aug-_W))
    var(--aug-_RPathInset1, ),
    var(--aug-_BrPathInset1, var(--aug-_100W) var(--aug-_100W))
    var(--aug-_BPathInset1, ),
    var(--aug-_BlPathInset1, var(--aug-_W) var(--aug-_100W))
    var(--aug-_LPathInset1, ),
    var(--aug-_TlInset1JoinBX, var(--aug-_W)) var(--aug-_TlInset1JoinBY, var(--aug-_W)),
    0px var(--aug-_TlInset1JoinBY, var(--aug-_W)),
    0px 100%, 100% 100%, 100% 0px, 0px 0px,
    0px var(--aug-_TlInset1JoinBY, var(--aug-_W)),
    var(--aug-_TlInset1JoinBX, var(--aug-_W)) var(--aug-_TlInset1JoinBY, var(--aug-_W))
  );
}
/* This renders a background in an element (or pseudo element) on top of the content. If it can't be clipped, it must not happen. Fallbacks add a css border to it. */
@supports (--foo: , 0 0) and (((-webkit-clip-path: polygon(0 0, 100% 0, 50% 50%)) or (clip-path: polygon(0 0, 100% 0, 50% 50%))) or (-webkit-clip-path: polygon(0 0, 100% 0, 50% 50%))) {
  [augmented-ui~="border-el"],
  [augmented-ui~="exe"]::after {
    background: var(--aug-border-bg, none);
  }
}
[augmented-ui~="exe"]::before {
  content: "";
  display: var(--aug-inset-bg, none);
}
[augmented-ui~="inset-el"],
[augmented-ui~="exe"]::before {
  background: var(--aug-inset-bg, none);
  opacity: var(--aug-inset-opacity, 1);
  position: absolute;
  left: 0px;
  top: 0px;
  right: 0px;
  bottom: 0px;
  -webkit-clip-path: polygon(
    var(--aug-_TlPathInset2, var(--aug-_WD) var(--aug-_WD))
    var(--aug-_TPathInset2, ),
    var(--aug-_TrPathInset2, var(--aug-_100WD) var(--aug-_WD))
    var(--aug-_RPathInset2, ),
    var(--aug-_BrPathInset2, var(--aug-_100WD) var(--aug-_100WD))
    var(--aug-_BPathInset2, ),
    var(--aug-_BlPathInset2, var(--aug-_WD) var(--aug-_100WD))
    var(--aug-_LPathInset2, )
  );
          clip-path: polygon(
    var(--aug-_TlPathInset2, var(--aug-_WD) var(--aug-_WD))
    var(--aug-_TPathInset2, ),
    var(--aug-_TrPathInset2, var(--aug-_100WD) var(--aug-_WD))
    var(--aug-_RPathInset2, ),
    var(--aug-_BrPathInset2, var(--aug-_100WD) var(--aug-_100WD))
    var(--aug-_BPathInset2, ),
    var(--aug-_BlPathInset2, var(--aug-_WD) var(--aug-_100WD))
    var(--aug-_LPathInset2, )
  );
  z-index: -1;
}

/* exe-init does not clip itself and can not spawn pseudo elements for the border/inset. It allows delegated border-el and inset-el children. */
/* exe-lite clips itself but can not spawn pseudo elements for the border/inset. It allows delegated border-el and inset-el children. */
[augmented-ui~="exe-init"],
[augmented-ui~="exe"],
[augmented-ui~="exe-lite"],
[augmented-ui~="before"]::before,
[augmented-ui~="after"]::after {
  position: relative;
  --aug-border: initial;
  --aug-border-bg: initial;
  --aug-border-opacity: initial;
  --aug-inset: initial;
  --aug-inset-bg: initial;
  --aug-inset-opacity: initial;
  --aug-border-radius-fallback: initial;
  --aug-border-radius-fallback-inset: initial;
  --aug-border-fallback-color: initial;
  --aug-_W: var(--aug-border, 0px);
  --aug-_D: var(--aug-inset, 0px);
  --aug-_WD: calc(var(--aug-_W) + var(--aug-_D));
  --aug-_100W: calc(100% - var(--aug-_W));
  --aug-_100WD: calc(100% - var(--aug-_WD));
}
[augmented-ui~="exe"],
[augmented-ui~="exe-lite"],
[augmented-ui~="before"]::before,
[augmented-ui~="after"]::after {
  -webkit-clip-path: polygon(
    var(--aug-_TlPath, 0px 0px)
    var(--aug-_TPath, ),
    var(--aug-_TrPath, 100% 0px)
    var(--aug-_RPath, ),
    var(--aug-_BrPath, 100% 100%)
    var(--aug-_BPath, ),
    var(--aug-_BlPath, 0px 100%)
    var(--aug-_LPath, )
  );
          clip-path: polygon(
    var(--aug-_TlPath, 0px 0px)
    var(--aug-_TPath, ),
    var(--aug-_TrPath, 100% 0px)
    var(--aug-_RPath, ),
    var(--aug-_BrPath, 100% 100%)
    var(--aug-_BPath, ),
    var(--aug-_BlPath, 0px 100%)
    var(--aug-_LPath, )
  );
}

/* Full featured webkit support: Chrome 51-54, Safari 9.1+, iOS Safari >= 11, Opera 38-41, Opera mobile 46+, UC Browser 12+, Samsung Internet 5+ */
@supports (--foo: , 0 0) and (-webkit-clip-path: polygon(0 0, 100% 0, 50% 50%)) and (not ((-webkit-clip-path: polygon(0 0, 100% 0, 50% 50%)) or (clip-path: polygon(0 0, 100% 0, 50% 50%)))) {
  [augmented-ui~="border-el"],
  [augmented-ui~="exe"]::after {
    -webkit-clip-path: polygon(
      var(--aug-_TlPathInset1, var(--aug-_W) var(--aug-_W))
      var(--aug-_TPathInset1, ),
      var(--aug-_TrPathInset1, var(--aug-_100W) var(--aug-_W))
      var(--aug-_RPathInset1, ),
      var(--aug-_BrPathInset1, var(--aug-_100W) var(--aug-_100W))
      var(--aug-_BPathInset1, ),
      var(--aug-_BlPathInset1, var(--aug-_W) var(--aug-_100W))
      var(--aug-_LPathInset1, ),
      var(--aug-_TlInset1JoinBX, var(--aug-_W)) var(--aug-_TlInset1JoinBY, var(--aug-_W)),
      0px var(--aug-_TlInset1JoinBY, var(--aug-_W)),
      0px 100%, 100% 100%, 100% 0px, 0px 0px,
      0px var(--aug-_TlInset1JoinBY, var(--aug-_W)),
      var(--aug-_TlInset1JoinBX, var(--aug-_W)) var(--aug-_TlInset1JoinBY, var(--aug-_W))
    );
  }
  [augmented-ui~="inset-el"],
  [augmented-ui~="exe"]::before {
    -webkit-clip-path: polygon(
      var(--aug-_TlPathInset2, var(--aug-_WD) var(--aug-_WD))
      var(--aug-_TPathInset2, ),
      var(--aug-_TrPathInset2, var(--aug-_100WD) var(--aug-_WD))
      var(--aug-_RPathInset2, ),
      var(--aug-_BrPathInset2, var(--aug-_100WD) var(--aug-_100WD))
      var(--aug-_BPathInset2, ),
      var(--aug-_BlPathInset2, var(--aug-_WD) var(--aug-_100WD))
      var(--aug-_LPathInset2, )
    );
  }
  [augmented-ui~="exe"],
  [augmented-ui~="exe-lite"],
  [augmented-ui~="before"]::before,
  [augmented-ui~="after"]::after {
    -webkit-clip-path: polygon(
      var(--aug-_TlPath, 0px 0px)
      var(--aug-_TPath, ),
      var(--aug-_TrPath, 100% 0px)
      var(--aug-_RPath, ),
      var(--aug-_BrPath, 100% 100%)
      var(--aug-_BPath, ),
      var(--aug-_BlPath, 0px 100%)
      var(--aug-_LPath, )
    );
  }
}

/* Eliptical border radius fallback. (browsers without (-webkit-)clip-path or browsers that don't supprot css vars with leading or trailing commas) */
/* pre chromium Edge and safari iOS < 11 */
@supports (not ((--foo: , 0 0) and (((-webkit-clip-path: polygon(0 0, 100% 0, 50% 50%)) or (clip-path: polygon(0 0, 100% 0, 50% 50%))) or (-webkit-clip-path: polygon(0 0, 100% 0, 50% 50%))))) {
  /* vvv almost all of the code here avoids this: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/17410857/ for 5 layers of inheritance vvv */

  /* Step 1: set up any pseduo-level vars on main elements first (setup for any el that uses them to avoid repeat, not just pseudo parents) */
  [augmented-ui~="exe"],
  [augmented-ui~="before"],
  [augmented-ui~="after"],
  [augmented-ui~="border-el"] {
    --aug-_AutoBorderRadiusFallback: var(--aug-_TlWidth, var(--aug-tl, 0px))
                                     var(--aug-_TrWidth, var(--aug-tr, 0px))
                                     var(--aug-_BrWidth, var(--aug-br, 0px))
                                     var(--aug-_BlWidth, var(--aug-bl, 0px)) /
                                     var(--aug-_TlHeight, var(--aug-tl, 0px))
                                     var(--aug-_TrHeight, var(--aug-tr, 0px))
                                     var(--aug-_BrHeight, var(--aug-br, 0px))
                                     var(--aug-_BlHeight, var(--aug-bl, 0px));
    /* used on main el (or main el pseudo delegates) and main exe::after / border-el */
    --aug-_PrimaryBorderRadiusFallbackResolved: var(--aug-border-radius-fallback, var(--aug-_AutoBorderRadiusFallback));
  }
  [augmented-ui~="exe"],
  [augmented-ui~="inset-el"] {
    --aug-_InsetAutoBorderRadiusFallback: calc(var(--aug-_TlWidth, var(--aug-tl, 0px)) - var(--aug-_WD, 0px))
                                          calc(var(--aug-_TrWidth, var(--aug-tr, 0px)) - var(--aug-_WD, 0px))
                                          calc(var(--aug-_BrWidth, var(--aug-br, 0px)) - var(--aug-_WD, 0px))
                                          calc(var(--aug-_BlWidth, var(--aug-bl, 0px)) - var(--aug-_WD, 0px)) /
                                          calc(var(--aug-_TlHeight, var(--aug-tl, 0px)) - var(--aug-_WD, 0px))
                                          calc(var(--aug-_TrHeight, var(--aug-tr, 0px)) - var(--aug-_WD, 0px))
                                          calc(var(--aug-_BrHeight, var(--aug-br, 0px)) - var(--aug-_WD, 0px))
                                          calc(var(--aug-_BlHeight, var(--aug-bl, 0px)) - var(--aug-_WD, 0px));
    /* used on exe::before and inset-el */
    --aug-_InsetBorderRadiusFallbackResolved: var(--aug-border-radius-fallback-inset, var(--aug-_InsetAutoBorderRadiusFallback));
    --aug-_InsetDistanceResolved: var(--aug-_WD, 0px);
    --aug-_InsetBGResolved: var(--aug-inset-bg, none);
    --aug-_InsetOpacityResolved: var(--aug-inset-opacity, 1);
  }
  [augmented-ui~="exe"],
  [augmented-ui~="border-el"] {
    --aug-_BorderNoColorResolved: var(--aug-_W, 0px) solid;
    --aug-_BorderColorResolved: var(--aug-border-fallback-color, var(--aug-border-bg, transparent));
    --aug-_BorderOpacityResolved: var(--aug-border-opacity, 1);
  }

  /* Step 2: apply CSS as normal to their respective parts, using only resolved form of vars as needed */
  [augmented-ui~="inset-el"],
  [augmented-ui~="exe"]::before {
    left: var(--aug-_InsetDistanceResolved);
    top: var(--aug-_InsetDistanceResolved);
    right: var(--aug-_InsetDistanceResolved);
    bottom: var(--aug-_InsetDistanceResolved);
    border-radius: var(--aug-_InsetBorderRadiusFallbackResolved, 0px);
    background: var(--aug-_InsetBGResolved);
    opacity: var(--aug-_InsetOpacityResolved);
    /* clip-path causes a new stacking context and hides overflow, this reproduces that */
    -webkit-transform: translateZ(0px);
            transform: translateZ(0px);
    overflow: hidden;
  }
  [augmented-ui~="border-el"],
  [augmented-ui~="exe"]::after {
    overflow: hidden;
    -webkit-transform: translateZ(0px);
            transform: translateZ(0px);
    background: transparent!important;
    border-radius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    border: var(--aug-_BorderNoColorResolved) var(--aug-_BorderColorResolved);
    opacity: var(--aug-_BorderOpacityResolved);
  }
  [augmented-ui~="exe"],
  [augmented-ui~="before"]::before,
  [augmented-ui~="after"]::after {
    border-radius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    /* clip-path causes a new stacking context and hides overflow, this reproduces that */
    -webkit-transform: translateZ(0px);
            transform: translateZ(0px);
    overflow: hidden;
  }

  /* Step 3 part 1: For any pseudo children using resoved vars,
     create duplicate vars, with depth dependent names, of each resolved var on their parent, for the first depth,
     then use the depth copy on pseudo children of that depth to override the broken one
  */
  [augmented-ui] [augmented-ui~="exe"] {
    --aug-_CDEPTH1_BorderNoColor: var(--aug-_BorderNoColorResolved);
    --aug-_CDEPTH1_BorderColor: var(--aug-_BorderColorResolved);
    --aug-_CDEPTH1_InsetDistance: var(--aug-_InsetDistanceResolved);
    --aug-_CDPETH1_PrimaryBorderRadius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH1_InsetBorderRadius: var(--aug-_InsetBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH1_InsetBG: var(--aug-_InsetBGResolved);
    --aug-_CDEPTH1_InsetOpacity: var(--aug-_InsetOpacityResolved);
    --aug-_CDEPTH1_BorderOpacity: var(--aug-_BorderOpacityResolved);
  }
  [augmented-ui] [augmented-ui~="before"],
  [augmented-ui] [augmented-ui~="after"] {
    --aug-_CDPETH1_PrimaryBorderRadiusDelegated: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
  }
  [augmented-ui] [augmented-ui~="exe"]::after {
    border:        var(--aug-_CDEPTH1_BorderNoColor) var(--aug-_CDEPTH1_BorderColor);
    border-radius: var(--aug-_CDPETH1_PrimaryBorderRadius);
    opacity:       var(--aug-_CDEPTH1_BorderOpacity);
    display:       var(--aug-_CDEPTH1_BorderColor);
  }
  [augmented-ui] [augmented-ui~="exe"]::before {
    left:          var(--aug-_CDEPTH1_InsetDistance);
    top:           var(--aug-_CDEPTH1_InsetDistance);
    right:         var(--aug-_CDEPTH1_InsetDistance);
    bottom:        var(--aug-_CDEPTH1_InsetDistance);
    border-radius: var(--aug-_CDEPTH1_InsetBorderRadius);
    background:    var(--aug-_CDEPTH1_InsetBG);
    opacity:       var(--aug-_CDEPTH1_InsetOpacity);
    display:       var(--aug-_CDEPTH1_InsetBG);
  }
  [augmented-ui] [augmented-ui~="before"]::before,
  [augmented-ui] [augmented-ui~="after"]::after {
    border-radius: var(--aug-_CDPETH1_PrimaryBorderRadiusDelegated);
  }

  /* Step 3 part 2: copy step 3 part 1, increase the number on the depth vars, prepend the depth selector, repeat until supported dpeth reached */
  /* Note: preprosessor could make this painless */

  /* 2 deep */
  [augmented-ui] [augmented-ui] [augmented-ui~="exe"] {
    --aug-_CDEPTH2_BorderNoColor: var(--aug-_BorderNoColorResolved);
    --aug-_CDEPTH2_BorderColor: var(--aug-_BorderColorResolved);
    --aug-_CDEPTH2_InsetDistance: var(--aug-_InsetDistanceResolved);
    --aug-_CDPETH2_PrimaryBorderRadius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH2_InsetBorderRadius: var(--aug-_InsetBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH2_InsetBG: var(--aug-_InsetBGResolved);
    --aug-_CDEPTH2_InsetOpacity: var(--aug-_InsetOpacityResolved);
    --aug-_CDEPTH2_BorderOpacity: var(--aug-_BorderOpacityResolved);
  }
  [augmented-ui] [augmented-ui] [augmented-ui~="before"],
  [augmented-ui] [augmented-ui] [augmented-ui~="after"] {
    --aug-_CDPETH2_PrimaryBorderRadiusDelegated: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
  }
  [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::after {
    border:        var(--aug-_CDEPTH2_BorderNoColor) var(--aug-_CDEPTH2_BorderColor);
    border-radius: var(--aug-_CDPETH2_PrimaryBorderRadius);
    opacity:       var(--aug-_CDEPTH2_BorderOpacity);
    display:       var(--aug-_CDEPTH2_BorderColor);
  }
  [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::before {
    left:          var(--aug-_CDEPTH2_InsetDistance);
    top:           var(--aug-_CDEPTH2_InsetDistance);
    right:         var(--aug-_CDEPTH2_InsetDistance);
    bottom:        var(--aug-_CDEPTH2_InsetDistance);
    border-radius: var(--aug-_CDEPTH2_InsetBorderRadius);
    background:    var(--aug-_CDEPTH2_InsetBG);
    opacity:       var(--aug-_CDEPTH2_InsetOpacity);
    display:       var(--aug-_CDEPTH2_InsetBG);
  }
  [augmented-ui] [augmented-ui] [augmented-ui~="before"]::before,
  [augmented-ui] [augmented-ui] [augmented-ui~="after"]::after {
    border-radius: var(--aug-_CDPETH2_PrimaryBorderRadiusDelegated);
  }
  /* 3 deep */
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"] {
    --aug-_CDEPTH3_BorderNoColor: var(--aug-_BorderNoColorResolved);
    --aug-_CDEPTH3_BorderColor: var(--aug-_BorderColorResolved);
    --aug-_CDEPTH3_InsetDistance: var(--aug-_InsetDistanceResolved);
    --aug-_CDPETH3_PrimaryBorderRadius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH3_InsetBorderRadius: var(--aug-_InsetBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH3_InsetBG: var(--aug-_InsetBGResolved);
    --aug-_CDEPTH3_InsetOpacity: var(--aug-_InsetOpacityResolved);
    --aug-_CDEPTH3_BorderOpacity: var(--aug-_BorderOpacityResolved);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="before"],
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="after"] {
    --aug-_CDPETH3_PrimaryBorderRadiusDelegated: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::after {
    border:        var(--aug-_CDEPTH3_BorderNoColor) var(--aug-_CDEPTH3_BorderColor);
    border-radius: var(--aug-_CDPETH3_PrimaryBorderRadius);
    opacity:       var(--aug-_CDEPTH3_BorderOpacity);
    display:       var(--aug-_CDEPTH3_BorderColor);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::before {
    left:          var(--aug-_CDEPTH3_InsetDistance);
    top:           var(--aug-_CDEPTH3_InsetDistance);
    right:         var(--aug-_CDEPTH3_InsetDistance);
    bottom:        var(--aug-_CDEPTH3_InsetDistance);
    border-radius: var(--aug-_CDEPTH3_InsetBorderRadius);
    background:    var(--aug-_CDEPTH3_InsetBG);
    opacity:       var(--aug-_CDEPTH3_InsetOpacity);
    display:       var(--aug-_CDEPTH3_InsetBG);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="before"]::before,
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="after"]::after {
    border-radius: var(--aug-_CDPETH3_PrimaryBorderRadiusDelegated);
  }
  /* 4 deep */
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"] {
    --aug-_CDEPTH4_BorderNoColor: var(--aug-_BorderNoColorResolved);
    --aug-_CDEPTH4_BorderColor: var(--aug-_BorderColorResolved);
    --aug-_CDEPTH4_InsetDistance: var(--aug-_InsetDistanceResolved);
    --aug-_CDPETH4_PrimaryBorderRadius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH4_InsetBorderRadius: var(--aug-_InsetBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH4_InsetBG: var(--aug-_InsetBGResolved);
    --aug-_CDEPTH4_InsetOpacity: var(--aug-_InsetOpacityResolved);
    --aug-_CDEPTH4_BorderOpacity: var(--aug-_BorderOpacityResolved);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="before"],
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="after"] {
    --aug-_CDPETH4_PrimaryBorderRadiusDelegated: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::after {
    border:        var(--aug-_CDEPTH4_BorderNoColor) var(--aug-_CDEPTH4_BorderColor);
    border-radius: var(--aug-_CDPETH4_PrimaryBorderRadius);
    opacity:       var(--aug-_CDEPTH4_BorderOpacity);
    display:       var(--aug-_CDEPTH4_BorderColor);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::before {
    left:          var(--aug-_CDEPTH4_InsetDistance);
    top:           var(--aug-_CDEPTH4_InsetDistance);
    right:         var(--aug-_CDEPTH4_InsetDistance);
    bottom:        var(--aug-_CDEPTH4_InsetDistance);
    border-radius: var(--aug-_CDEPTH4_InsetBorderRadius);
    background:    var(--aug-_CDEPTH4_InsetBG);
    opacity:       var(--aug-_CDEPTH4_InsetOpacity);
    display:       var(--aug-_CDEPTH4_InsetBG);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="before"]::before,
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="after"]::after {
    border-radius: var(--aug-_CDPETH4_PrimaryBorderRadiusDelegated);
  }
  /* 5 deep */
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"] {
    --aug-_CDEPTH5_BorderNoColor: var(--aug-_BorderNoColorResolved);
    --aug-_CDEPTH5_BorderColor: var(--aug-_BorderColorResolved);
    --aug-_CDEPTH5_InsetDistance: var(--aug-_InsetDistanceResolved);
    --aug-_CDPETH5_PrimaryBorderRadius: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH5_InsetBorderRadius: var(--aug-_InsetBorderRadiusFallbackResolved, 0px);
    --aug-_CDEPTH5_InsetBG: var(--aug-_InsetBGResolved);
    --aug-_CDEPTH5_InsetOpacity: var(--aug-_InsetOpacityResolved);
    --aug-_CDEPTH5_BorderOpacity: var(--aug-_BorderOpacityResolved);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="before"],
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="after"] {
    --aug-_CDPETH5_PrimaryBorderRadiusDelegated: var(--aug-_PrimaryBorderRadiusFallbackResolved, 0px);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::after {
    border:        var(--aug-_CDEPTH5_BorderNoColor) var(--aug-_CDEPTH5_BorderColor);
    border-radius: var(--aug-_CDPETH5_PrimaryBorderRadius);
    opacity:       var(--aug-_CDEPTH5_BorderOpacity);
    display:       var(--aug-_CDEPTH5_BorderColor);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="exe"]::before {
    left:          var(--aug-_CDEPTH5_InsetDistance);
    top:           var(--aug-_CDEPTH5_InsetDistance);
    right:         var(--aug-_CDEPTH5_InsetDistance);
    bottom:        var(--aug-_CDEPTH5_InsetDistance);
    border-radius: var(--aug-_CDEPTH5_InsetBorderRadius);
    background:    var(--aug-_CDEPTH5_InsetBG);
    opacity:       var(--aug-_CDEPTH5_InsetOpacity);
    display:       var(--aug-_CDEPTH5_InsetBG);
  }
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="before"]::before,
  [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui] [augmented-ui~="after"]::after {
    border-radius: var(--aug-_CDPETH5_PrimaryBorderRadiusDelegated);
  }
  /* ^^^ almost all of the code here avoids this: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/17410857/ for 5 layers of inheritance ^^^ */
}

.v-grid
{
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
      flex-flow: column;
  height: 100%;
}
.v-cell-expand
{
  -ms-flex-positive : 1;
      flex-grow : 1;
  overflow: hidden;
}

@font-face {
  font-family: 'Audiowide';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/audiowide/v16/l7gdbjpo0cum0ckerWCtkQ.ttf) format('truetype');
}
@font-face {
  font-family: 'Electrolize';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/electrolize/v14/cIf5Ma1dtE0zSiGSiED7AUEG.ttf) format('truetype');
}
@font-face {
  font-family: 'Orbitron';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/orbitron/v25/yMJMMIlzdpvBhQQL_SC3X9yhF25-T1ny_Cmxpg.ttf) format('truetype');
}
@font-face {
  font-family: 'Rajdhani';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/rajdhani/v15/LDI2apCSOBg7S-QT7pb0EMOs.ttf) format('truetype');
}
@font-face {
  font-family: 'Teko';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/teko/v15/LYjCdG7kmE0gdQhfgCM.ttf) format('truetype');
}
@font-face {
  font-family: 'Teko';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/teko/v15/LYjNdG7kmE0gTaQ.ttf) format('truetype');
}
html,
body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  width: 100%;
  overflow-x: hidden;
  color: white;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
  background-color: black;
  background-image: url(/tremulous_fork/e4ed1bbc37b9bb90bae82a39a74cda77.webp);
  background-position: center;
  background-repeat: repeat;
  background-attachment: fixed;
  background-position: center center;
  font-family: 'Teko', sans-serif;
  font-weight: 400;
  font-size: 30px;
  line-height: 1.14em;
}
* {
  box-sizing: border-box;
}
#app {
  padding: 56px 20px;
  min-height: 100%;
  width: 100%;
}
p,
h1,
h2,
h3,
h4,
h5,
h6,
h7 {
  padding: 0;
  margin: 0;
}
h1.title {
  margin-top: 0.25em;
  margin-bottom: 0.45em;
}
h2.title,
h3.title,
h4.title {
  margin-top: 0.2em;
  margin-bottom: 0.35em;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
}
h2.title:before,
h3.title:before,
h4.title:before,
h2.title:after,
h3.title:after,
h4.title:after {
  content: "";
  -ms-flex: 1;
      flex: 1;
  margin: 0px 10px;
  border-bottom: 3px dashed white;
}
a {
  color: white;
}
ul {
  margin-top: 0.2em;
  margin-bottom: 0.35em;
}
p {
  margin-bottom: 0.35em;
}
.bigfont,
h1,
h2,
h3,
h4,
h5,
h6,
h7 {
  font-family: 'Electrolize', sans-serif;
  line-height: 1.34em;
}
.smallfont,
textarea,
.textblock {
  font-family: 'Teko', sans-serif;
  font-weight: 300;
}
textarea,
.textblock {
  font-size: 0.92em;
  line-height: 1em;
}
.textblock {
  overflow-y: auto;
  height: 100%;
}
.chat {
  font-family: 'Rajdhani', sans-serif;
  font-weight: 500;
}
.alien {
  font-family: 'Audiowide', cursive;
  line-height: 1.2em;
}
.human {
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  line-height: 1.2em;
}
.shadow,
h3.title,
h4.title {
  text-shadow: 0.05em 0.05em 0.1em black;
}
.shadow_more,
h1.title,
h2.title {
  text-shadow: 0.1em 0.1em 0.2em black;
}
strong {
  font-weight: inherit;
}
.neon,
strong,
h1.title {
  color: white;
  text-shadow: 0px 0px 0.3em cyan;
}
.emoticon {
  vertical-align: middle;
  height: 1em;
  width: 1em;
}
.emoticon_large {
  width: 2em;
}

.middle {
  display: grid !important;
  place-items: center !important;
}
.right {
  text-align: right !important;
}
.center {
  text-align: center !important;
}
.left {
  text-align: left !important;
}
.disabled {
  color: #808080 !important;
}
.disabled * {
  color: #808080 !important;
}
.black {
  color: #000000 !important;
}
.red {
  color: #ff0000 !important;
}
.green {
  color: #00ff00 !important;
}
.blue {
  color: #0000ff !important;
}
.yellow {
  color: #ffff00 !important;
}
.magenta {
  color: #ff00ff !important;
}
.cyan {
  color: #000101 !important;
}
.white {
  color: #010101 !important;
}
.grey {
  color: #808080 !important;
}

.Cell {
  padding: 0px 6px;
}
.Cell:last-child {
  padding-right: 0px;
}
.Cell:first-child {
  padding-left: 0px;
}

.page__z77rq {
  text-align: center;
  overflow: visible;
}
@-webkit-keyframes slide-in-left__ttRKH {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-25%);
            transform: translateX(-25%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}
@keyframes slide-in-left__ttRKH {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-25%);
            transform: translateX(-25%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}
@-webkit-keyframes slide-in-right__ThmyK {
  0% {
    opacity: 0;
    -webkit-transform: translateX(25%);
            transform: translateX(25%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}
@keyframes slide-in-right__ThmyK {
  0% {
    opacity: 0;
    -webkit-transform: translateX(25%);
            transform: translateX(25%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}
.section__bbeig {
  height: 420px;
  margin: 50px 20px;
}
.section__bbeig.hide__azQI3 {
  visibility: hidden;
}
.section__bbeig.hide__azQI3 > * {
  display: none;
}
.section__bbeig.show__Xv1\+M > *:first-child {
  -webkit-animation: slide-in-left__ttRKH 1s;
          animation: slide-in-left__ttRKH 1s;
}
.section__bbeig.show__Xv1\+M > *:last-child {
  -webkit-animation: slide-in-right__ThmyK 1s;
          animation: slide-in-right__ThmyK 1s;
}
.content__Q7LbX {
  -webkit-perspective: 1600px;
          perspective: 1600px;
  overflow: visible;
  width: 80%;
}
.content__Q7LbX > * {
  max-width: 800px;
}
.content__Q7LbX:first-child > * {
  -webkit-transform: rotateY(20deg);
          transform: rotateY(20deg);
  -webkit-transform-origin: center left;
      -ms-transform-origin: center left;
          transform-origin: center left;
  height: 420px;
  max-height: 420px;
}
.content__Q7LbX:last-child > * {
  -webkit-transform: rotateY(-20deg);
          transform: rotateY(-20deg);
  -webkit-transform-origin: center right;
      -ms-transform-origin: center right;
          transform-origin: center right;
  height: 420px;
  max-height: 420px;
}
.font_preview__gaPyv {
  font-size: 1.2em;
  line-height: 1.2em;
}
.ui_preview__S0KHO > * {
  position: absolute;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -webkit-transform: scaleX(0.5) scaleY(0.5) translateX(-50%) translateY(-50%);
      -ms-transform: scaleX(0.5) scaleY(0.5) translateX(-50%) translateY(-50%);
          transform: scaleX(0.5) scaleY(0.5) translateX(-50%) translateY(-50%);
  -webkit-transform-origin: 0 0;
      -ms-transform-origin: 0 0;
          transform-origin: 0 0;
}
.ui_preview__S0KHO > * > * {
  -ms-flex: none;
      flex: none;
}
.ui_class_preview__-Axcb {
  height: 100%;
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: end;
      align-items: flex-end;
  -ms-flex-pack: end;
      justify-content: flex-end;
}
.ui_class_preview__-Axcb > img {
  height: 75%;
}
.status__PeEto {
  font-size: 2em;
}
.media_container__Twdqo {
  position: relative;
  width: 90%;
  padding-top: 56.25%;
}
.media_container__Twdqo > * {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.nobreak__gRUmB {
  white-space: nowrap;
}

.common__4KKUf {
  text-shadow: 0px 0px 5px black;
}
.common__4KKUf > a {
  padding: 0.5em;
}
.nav__SQfAm {
  /*
    position: -webkit-sticky;
    position: sticky;
    will-change: transform;
    top: 0.25em;
    z-index: 999;
    Disabled as it overlap titles and as it doesn't indicate current position itself
  */
  text-shadow: 0px 0px 5px black;
  padding: 0 0.25em 0.35em 0.25em;
}
.nav__SQfAm > a {
  padding: 0.5em;
}
.footer__knTAC {
  text-shadow: 0px 0px 5px black;
  padding: 1em 0.25em 0.35em 0.25em;
}
.footer__knTAC > a {
  padding: 0.5em;
}

.generic__I4E5u,
.alien__s9dni,
.human__GgIH6 {
  display: inline-block;
  vertical-align: top;
  padding: 0.4em;
  text-align: left;
  --aug-border: 0.06666667em;
  --aug-inset: 0px;
  --aug-border-opacity: 0.85;
  --aug-inset-opacity: 0.85;
}
.generic_sub__MOENc,
.alien_sub__XuEHl,
.human_sub__Kvpmt {
  height: 100%;
  width: 100%;
}
.generic_list__Bb5Cg,
.alien_list__L6RCD,
.human_list__NIWmH {
  overflow: hidden;
  padding: 0;
}
.generic_list__Bb5Cg > ul,
.alien_list__L6RCD > ul,
.human_list__NIWmH > ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.generic_list__Bb5Cg > ul > li,
.alien_list__L6RCD > ul > li,
.human_list__NIWmH > ul > li {
  margin: 0;
  padding: 0;
}
.generic_list__Bb5Cg > ul > li > *,
.alien_list__L6RCD > ul > li > *,
.human_list__NIWmH > ul > li > * {
  display: block;
  margin: 0;
  padding: 0.1em 0.35em;
  cursor: pointer;
  --aug-border: 0px;
  --aug-inset: 0px;
  --aug-inset-bg: #1a1a1a;
  --aug-inset-opacity: 0;
}
.generic_list__Bb5Cg > ul > li > *:focus,
.alien_list__L6RCD > ul > li > *:focus,
.human_list__NIWmH > ul > li > *:focus,
.generic_list__Bb5Cg > ul > li > *:hover,
.alien_list__L6RCD > ul > li > *:hover,
.human_list__NIWmH > ul > li > *:hover {
  --aug-inset-opacity: (0.5 * 0.55);
}
.generic_list__Bb5Cg > ul > li > *:focus a,
.alien_list__L6RCD > ul > li > *:focus a,
.human_list__NIWmH > ul > li > *:focus a,
.generic_list__Bb5Cg > ul > li > *:hover a,
.alien_list__L6RCD > ul > li > *:hover a,
.human_list__NIWmH > ul > li > *:hover a {
  color: inherit;
}
.generic_list__Bb5Cg > ul > li.active__8EbhU > *,
.alien_list__L6RCD > ul > li.active__8EbhU > *,
.human_list__NIWmH > ul > li.active__8EbhU > * {
  --aug-inset-opacity: 0.5;
}
.generic_list__Bb5Cg > ul > li.active__8EbhU {
  color: #ffbf00;
}
.alien_list__L6RCD > ul > li.active__8EbhU {
  color: #ff4040;
}
.human_list__NIWmH > ul > li.active__8EbhU {
  color: #66b3ff;
}
.actions__3zWaY {
  padding-top: 0.4em;
  text-align: right;
}
.actions__3zWaY a {
  padding: 0.2em 0.4em;
}
.generic__I4E5u {
  --aug-inset-bg: rgba(0, 0, 0, 0.85);
  --aug-border-bg: rgba(128, 128, 128, 0.425);
}
.generic__I4E5u a:focus,
.generic__I4E5u a:hover {
  color: #ffbf00;
}
.alien__s9dni {
  --aug-inset-bg: rgba(13, 0, 0, 0.85);
  --aug-border-bg: rgba(153, 128, 128, 0.425);
}
.alien__s9dni a:focus,
.alien__s9dni a:hover {
  color: #ff4040;
}
.alien__s9dni h1,
.alien__s9dni h2,
.alien__s9dni h3,
.alien__s9dni h4,
.alien__s9dni h5,
.alien__s9dni h6,
.alien__s9dni h7 {
  font-family: 'Audiowide', cursive;
  line-height: 1.34em;
}
.human__GgIH6 {
  --aug-inset-bg: rgba(0, 6, 13, 0.85);
  --aug-border-bg: rgba(128, 140, 153, 0.425);
}
.human__GgIH6 a:focus,
.human__GgIH6 a:hover {
  color: #66b3ff;
}
.human__GgIH6 h1,
.human__GgIH6 h2,
.human__GgIH6 h3,
.human__GgIH6 h4,
.human__GgIH6 h5,
.human__GgIH6 h6,
.human__GgIH6 h7 {
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  line-height: 1.34em;
}
.alien_sub__XuEHl {
  --aug-inset-bg: rgba(26, 0, 0, 0.85);
  --aug-border-bg: rgba(153, 115, 115, 0.425);
}
.human_sub__Kvpmt {
  --aug-inset-bg: rgba(0, 13, 26, 0.85);
  --aug-border-bg: rgba(115, 134, 153, 0.425);
}
.big__Vb6nJ {
  font-size: 42px;
}

.base__2U\+q1 {
  position: relative;
  padding: 1.4em 0.4em 0.4em 0.4em;
  --aug-border: 0.1em;
  --aug-border-opacity: 0.85;
  --aug-inset-opacity: 0.85;
  --aug-tr-width: calc(100% - 8em);
  --aug-tl: 0.8em;
  --aug-tr: 0.8em;
  --aug-br: 0.8em;
}
.base__2U\+q1 > span {
  position: absolute;
  width: 8em;
  top: 0.1em;
  left: 0.4em;
  text-align: center;
  text-decoration: underline;
  text-decoration-color: #ffffff80;
}
.warning__iroXt {
  position: relative;
  padding: 1.4em 0.4em 0.4em 0.4em;
  --aug-border: 0.1em;
  --aug-border-opacity: 0.85;
  --aug-inset-opacity: 0.85;
  --aug-tr-width: calc(100% - 8em);
  --aug-tl: 0.8em;
  --aug-tr: 0.8em;
  --aug-br: 0.8em;
  --aug-border-bg: #ff4040;
  color: #ff4040;
}
.warning__iroXt > span {
  position: absolute;
  width: 8em;
  top: 0.1em;
  left: 0.4em;
  text-align: center;
  text-decoration: underline;
  text-decoration-color: #ffffff80;
}
.information__erSB7 {
  position: relative;
  padding: 1.4em 0.4em 0.4em 0.4em;
  --aug-border: 0.1em;
  --aug-border-opacity: 0.85;
  --aug-inset-opacity: 0.85;
  --aug-tr-width: calc(100% - 8em);
  --aug-tl: 0.8em;
  --aug-tr: 0.8em;
  --aug-br: 0.8em;
  --aug-border-bg: #66b3ff;
  color: #66b3ff;
}
.information__erSB7 > span {
  position: absolute;
  width: 8em;
  top: 0.1em;
  left: 0.4em;
  text-align: center;
  text-decoration: underline;
  text-decoration-color: #ffffff80;
}
.alert__sdCoI {
  position: relative;
  padding: 1.4em 0.4em 0.4em 0.4em;
  --aug-border: 0.1em;
  --aug-border-opacity: 0.85;
  --aug-inset-opacity: 0.85;
  --aug-tr-width: calc(100% - 8em);
  --aug-tl: 0.8em;
  --aug-tr: 0.8em;
  --aug-br: 0.8em;
  --aug-border-bg: #ffbf00;
  color: #ffbf00;
}
.alert__sdCoI > span {
  position: absolute;
  width: 8em;
  top: 0.1em;
  left: 0.4em;
  text-align: center;
  text-decoration: underline;
  text-decoration-color: #ffffff80;
}

.base__RJs5c {
  position: relative;
  --aug-border: 0.1em;
  --aug-border-opacity: 1;
  --aug-inset-opacity: 0.5;
}
.outter__8mCmf {
  position: relative;
  --aug-border: 0.1em;
  --aug-border-opacity: 1;
  --aug-inset-opacity: 0.5;
  height: 3em;
  padding: 0.3em;
  --aug-border-bg: #00ccff;
  --aug-tl: 0.65em;
  --aug-tr: 0.65em;
  --aug-bl: 0.65em;
  --aug-br: 0.65em;
}
.outter__8mCmf > span {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  text-align: center;
  font-size: 2em;
  line-height: 1.5em;
}
.inner__sWSSq {
  position: relative;
  --aug-border: 0.1em;
  --aug-border-opacity: 1;
  --aug-inset-opacity: 0.5;
  height: 2.4em;
  padding: 0 0.55em;
  --aug-inset-bg: #00ccff;
  --aug-tl: 0.5em;
  --aug-tr: 0.5em;
  --aug-bl: 0.5em;
  --aug-br: 0.5em;
}

.page__0lr8p {
  text-align: center;
  overflow: visible;
}
.content__B3N8A {
  margin: 1em;
}


/*# sourceMappingURL=ssr-bundle.1df66.css.map*/